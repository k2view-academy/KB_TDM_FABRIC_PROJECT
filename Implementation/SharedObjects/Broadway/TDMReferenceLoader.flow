{
    "levels": [
        {
            "stages": [
                {
                    "name": "Initiate",
                    "dependsOnList": [],
                    "isLast": 0,
                    "remark": "This Flow is used to load each TDM Reference Table from Cassandra to Target.\nThis Flow follows the following:\n1. The tables were extracted from Source to Cassandra Interface DB_CASSANDRA\n2. The tables were loaded under keyspace k2view_tdm\n3. The task execution job, sets the value for field TDM_TASK_EXECUTION_ID based on dataflux indicator and job properties.\n4. The Reference tables in Cassandra will have 3 additional control fields:\n   a. source_env_name\n   b. tdm_task_execution_id\n   c. rec_id\n   This fields will not be loaded to target table.\n4. At the end the flow will update the TDMDB table TASK_REF_EXE_STATS\n\n\n\n",
                    "actors": [
                        {
                            "name": "InitiateTDMReferenceLoad_Actor1",
                            "actorType": {
                                "parentType": "InitiateTDMReferenceLoad_Actor",
                                "inputs": [
                                    {
                                        "name": "luName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "taskExecutionID",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "selectedRefVersionTaskName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "selectedRefVersionDateTime",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "targetEnvName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Reference Table Details",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Elvis1",
                            "actorType": {
                                "parentType": "Elvis",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "ALL"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get Details of Reference Table",
                            "actorType": {
                                "parentType": "LuFunction",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "const": "fnGetRefTableData"
                                    },
                                    {
                                        "const": "TDM",
                                        "name": "luType",
                                        "schema": {}
                                    },
                                    {
                                        "name": "luName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "schemaName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "interfaceName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "targetSchemaName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "targetInterfaceName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTablePK",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Get Key Space Name",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "REF_KEYSPACE_NAME",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Delete Data From Target",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Error Handler Of Deletion",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Delete Target Table",
                            "minHeight": 346,
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": null
                                    },
                                    {
                                        "name": "sql",
                                        "const": "delete from ${@Schema}.${@refTableName}"
                                    },
                                    {
                                        "name": "Schema",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Count Records in Source Table",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Error Handler Of Record Count",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "DbFetchField1",
                            "actorType": {
                                "parentType": "DbFetchField",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "DB_CASSANDRA"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select count(*) as recordsCount from ${@refKeySpace}.${@refTableName} where  TDM_TASK_EXECUTION_ID = ${selectedRefVersionTaskExeId} And\r\n  source_env_name = ${sourceEnvName}"
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "selectedRefVersionTaskExeId",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "sourceEnvName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refKeySpace",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Reference Data and Fields List",
                    "dependsOnList": [
                        "Count Records in Source Table"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "GreaterThan1",
                            "condition": "result",
                            "actorType": {
                                "parentType": "GreaterThan",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "const": 0
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Error Handler Of Get Data From Cassandra",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get Data From Cassandra",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "DB_CASSANDRA"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select * from ${@refKeySpace}.${@refTableName} where  TDM_TASK_EXECUTION_ID = ${selectedRefVersionTaskExeId} And\r\n  source_env_name = ${sourceEnvName}"
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "selectedRefVersionTaskExeId",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "sourceEnvName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refKeySpace",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source_env_name": {
                                                        "type": "string"
                                                    },
                                                    "tdm_task_execution_id": {
                                                        "type": "string"
                                                    },
                                                    "rec_id": {
                                                        "type": "string"
                                                    },
                                                    "medication_id": {
                                                        "type": "string"
                                                    },
                                                    "medication_name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Get Table Fields From Cassandra",
                            "actorType": {
                                "parentType": "GetTableFieldsFromCassandra_Actor",
                                "inputs": [
                                    {
                                        "name": "cassandraInterface",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "DB_CASSANDRA"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Initiate Counter",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.isNewTable = true;"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Empty Source Table",
                    "dependsOnList": [
                        "Count Records in Source Table"
                    ],
                    "isLast": 0,
                    "isTransactional": true,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "Error Handler For Updating TDMDB To Failure",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": true,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Update TDMDB table for Reference Table__1",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "UPDATE TASK_REF_EXE_STATS \r\nSET execution_status = 'failed', \r\nend_time = CURRENT_TIMESTAMP AT TIME ZONE 'UTC', \r\nupdated_by = 'TDMReferenceLoader',\r\nnumber_of_processed_records = 0,\r\nnumber_of_records_to_process = 0\r\nWHERE task_execution_id = ${taskExecutionID} \r\nand trim(lower(ref_table_name))= lower(${refTableName})"
                                    },
                                    {
                                        "name": "taskExecutionID",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Set Entity Status to Failed",
                            "actorType": {
                                "parentType": "FabricSet",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "ENTITY_STATUS",
                                        "isDefault": false
                                    },
                                    {
                                        "name": "value",
                                        "const": "failed",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "PopulateTaskExecutionEntities for failed table",
                            "actorType": {
                                "parentType": "PopulateTaskExecutionEntities_Actor",
                                "inputs": [
                                    {
                                        "name": "idType",
                                        "const": "REFERENCE"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Commit Changes",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "commit"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "JavaScript1",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "throw \"Empty Source Table in Cassandra\""
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Load Data to Target",
                    "dependsOnList": [
                        "Get Reference Data and Fields List"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Error Handler Of Loading",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": true,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Set Record Status to Success",
                            "minHeight": 179,
                            "actorType": {
                                "parentType": "FabricSet",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "RECORD_STATUS"
                                    },
                                    {
                                        "name": "value",
                                        "const": "succeed"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Insert Data To Target Table",
                            "minHeight": 308,
                            "actorType": {
                                "parentType": "DbLoad",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": null
                                    },
                                    {
                                        "name": "schema",
                                        "const": null
                                    },
                                    {
                                        "name": "table",
                                        "const": null
                                    },
                                    {
                                        "name": "fields",
                                        "const": null
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing",
                    "dependsOnList": [
                        "Empty Source Table"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Record Status",
                    "dependsOnList": [
                        "Load Data to Target"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "FabricSetRead1",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "RECORD_STATUS",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 1",
                    "dependsOnList": [
                        "Do Nothing"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Count Records in case of load succeeded ",
                    "dependsOnList": [
                        "Get Record Status"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Equals2",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "succeed"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Count Loaded Records",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "if (flowArgs.isNewTable == true) {\r\n    flowArgs.isNewTable = false;\r\n    flowArgs.count = affected;\r\n} else {\r\n    flowArgs.count += affected;\r\n}\r\nflowArgs.count;",
                                            "script": "if (flowArgs.isNewTable == true) {\n  flowArgs.isNewTable = false;\n  flowArgs.count = affected;\n} else {\n  flowArgs.count += affected;\n}\n\nflowArgs.count;"
                                        }
                                    },
                                    {
                                        "name": "affected",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Count Records in case of  load  failed",
                    "dependsOnList": [
                        "Get Record Status"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "Count Loaded Records reduce",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "if (flowArgs.isNewTable == true) {\r\n    flowArgs.isNewTable = false;\r\n    flowArgs.count = 0;\r\n} else {\r\n    flowArgs.count -= affected;\r\n}\r\nflowArgs.count;",
                                            "script": "if (flowArgs.isNewTable == true) {\n  flowArgs.isNewTable = false;\n  flowArgs.count = 0;\n} else {\n  flowArgs.count -= affected;\n}\n\nflowArgs.count;"
                                        }
                                    },
                                    {
                                        "name": "affected",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 2",
                    "dependsOnList": [
                        "Do Nothing 1"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check if 100 records were handled",
                    "dependsOnList": [
                        "Count Records in case of load succeeded ",
                        "Count Records in case of  load  failed"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "JavaScript3",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.count % 100;"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 3",
                    "dependsOnList": [
                        "Do Nothing 2"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update Count",
                    "dependsOnList": [
                        "Check if 100 records were handled"
                    ],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Equals1",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": 0
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Error Handler Of Updating number of records",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Update TDMDB table during loop",
                            "minHeight": 260,
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "UPDATE TASK_REF_EXE_STATS \r\nSET number_of_processed_records = ${loadedRecCnt},\r\nnumber_of_records_to_process = ${recsToBeLoaded}\r\nWHERE task_execution_id = ${taskExecutionID} \r\nand trim(lower(ref_table_name))= lower(${refTableName})"
                                    },
                                    {
                                        "name": "taskExecutionID",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "loadedRecCnt",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    {
                                        "name": "recsToBeLoaded",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Commit",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "commit;"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 4",
                    "dependsOnList": [
                        "Do Nothing 3"
                    ],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update TDMDB Table",
                    "dependsOnList": [
                        "Update Count"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Error Handler Of Updating Final Status",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Update TDMDB table for Reference Table",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "UPDATE TASK_REF_EXE_STATS \r\nSET execution_status = 'completed', \r\nend_time = CURRENT_TIMESTAMP AT TIME ZONE 'UTC', \r\nupdated_by = 'TDMReferenceLoader',\r\nnumber_of_processed_records = ${loadedRecCnt},\r\nnumber_of_records_to_process = ${recsToBeLoaded}\r\nWHERE task_execution_id = ${taskExecutionID} \r\nand trim(lower(ref_table_name))= lower(${refTableName})"
                                    },
                                    {
                                        "name": "taskExecutionID",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "loadedRecCnt",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    {
                                        "name": "recsToBeLoaded",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Set Entity Status to Success",
                            "actorType": {
                                "parentType": "FabricSet",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "ENTITY_STATUS",
                                        "isDefault": false
                                    },
                                    {
                                        "name": "value",
                                        "const": "completed",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "PopulateTaskExecutionEntities_Actor1",
                            "actorType": {
                                "parentType": "PopulateTaskExecutionEntities_Actor",
                                "inputs": [
                                    {
                                        "name": "idType",
                                        "const": "REFERENCE"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Logger3",
                            "actorType": {
                                "parentType": "Logger",
                                "inputs": [
                                    {
                                        "name": "message",
                                        "const": "Finished Loading Table: ${refTableName}"
                                    },
                                    {
                                        "name": "level",
                                        "const": "info"
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Commit 2",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "commit;"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get number of loaded records",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.count;"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 5",
                    "dependsOnList": [
                        "Do Nothing 4"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "If loaded records is less than read records",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "LessThan1",
                            "condition": "result",
                            "actorType": {
                                "parentType": "LessThan",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Error Handler Of Zero Loaded Records",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForRef"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "JavaScript2",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "throw \"Number of loaded records: \" + loadedRecs + \" is less than expected: \" + expectedRecs + \" for table \" + refTableName"
                                    },
                                    {
                                        "name": "refTableName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "loadedRecs",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    {
                                        "name": "expectedRecs",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Elvis1",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Cassandra",
                "name": "selectedRefVersionTaskExeId"
            }
        },
        {
            "leftPort": {
                "actor": "Elvis1",
                "name": "result"
            },
            "rightPort": {
                "actor": "DbFetchField1",
                "name": "selectedRefVersionTaskExeId"
            }
        },
        {
            "leftPort": {
                "actor": "Get Details of Reference Table",
                "name": "targetInterfaceName"
            },
            "rightPort": {
                "actor": "Insert Data To Target Table",
                "name": "interface"
            }
        },
        {
            "leftPort": {
                "actor": "Get Details of Reference Table",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Insert Data To Target Table",
                "name": "table"
            }
        },
        {
            "leftPort": {
                "actor": "Get Details of Reference Table",
                "name": "targetSchemaName"
            },
            "rightPort": {
                "actor": "Insert Data To Target Table",
                "name": "schema"
            }
        },
        {
            "leftPort": {
                "actor": "Get Details of Reference Table",
                "name": "targetInterfaceName"
            },
            "rightPort": {
                "actor": "Delete Target Table",
                "name": "interface"
            }
        },
        {
            "leftPort": {
                "actor": "Get Details of Reference Table",
                "name": "targetSchemaName"
            },
            "rightPort": {
                "actor": "Delete Target Table",
                "name": "Schema"
            }
        },
        {
            "leftPort": {
                "actor": "Get Details of Reference Table",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Delete Target Table",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "Get Key Space Name",
                "name": "result"
            },
            "rightPort": {
                "actor": "DbFetchField1",
                "name": "refKeySpace"
            }
        },
        {
            "leftPort": {
                "actor": "Get Key Space Name",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Cassandra",
                "name": "refKeySpace"
            }
        },
        {
            "leftPort": {
                "actor": "DbFetchField1",
                "name": "result"
            },
            "rightPort": {
                "actor": "GreaterThan1",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "DbFetchField1",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update TDMDB table for Reference Table",
                "name": "recsToBeLoaded"
            }
        },
        {
            "leftPort": {
                "actor": "DbFetchField1",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update TDMDB table during loop",
                "name": "recsToBeLoaded"
            }
        },
        {
            "leftPort": {
                "actor": "DbFetchField1",
                "name": "result"
            },
            "rightPort": {
                "actor": "LessThan1",
                "name": "b"
            }
        },
        {
            "leftPort": {
                "actor": "DbFetchField1",
                "name": "result"
            },
            "rightPort": {
                "actor": "JavaScript2",
                "name": "expectedRecs"
            }
        },
        {
            "leftPort": {
                "actor": "Get Data From Cassandra",
                "name": "result"
            },
            "rightPort": {
                "actor": "Insert Data To Target Table",
                "name": "params"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "Get Table Fields From Cassandra",
                "name": "result"
            },
            "rightPort": {
                "actor": "Insert Data To Target Table",
                "name": "fields"
            }
        },
        {
            "leftPort": {
                "actor": "Insert Data To Target Table",
                "name": "affected"
            },
            "rightPort": {
                "actor": "Count Loaded Records",
                "name": "affected"
            }
        },
        {
            "leftPort": {
                "actor": "FabricSetRead1",
                "name": "result"
            },
            "rightPort": {
                "actor": "Equals2",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Count Loaded Records",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update TDMDB table for Reference Table",
                "name": "loadedRecCnt"
            }
        },
        {
            "leftPort": {
                "actor": "Count Loaded Records",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update TDMDB table during loop",
                "name": "loadedRecCnt"
            }
        },
        {
            "leftPort": {
                "actor": "JavaScript3",
                "name": "result"
            },
            "rightPort": {
                "actor": "Equals1",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Get number of loaded records",
                "name": "result"
            },
            "rightPort": {
                "actor": "JavaScript2",
                "name": "loadedRecs"
            }
        },
        {
            "leftPort": {
                "actor": "Get number of loaded records",
                "name": "result"
            },
            "rightPort": {
                "actor": "LessThan1",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "luName"
            },
            "rightPort": {
                "actor": "InitiateTDMReferenceLoad_Actor1",
                "name": "luName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "taskExecutionID"
            },
            "rightPort": {
                "actor": "InitiateTDMReferenceLoad_Actor1",
                "name": "taskExecutionID"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "InitiateTDMReferenceLoad_Actor1",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "selectedRefVersionTaskName"
            },
            "rightPort": {
                "actor": "InitiateTDMReferenceLoad_Actor1",
                "name": "selectedRefVersionTaskName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "selectedRefVersionDateTime"
            },
            "rightPort": {
                "actor": "InitiateTDMReferenceLoad_Actor1",
                "name": "selectedRefVersionDateTime"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "targetEnvName"
            },
            "rightPort": {
                "actor": "InitiateTDMReferenceLoad_Actor1",
                "name": "targetEnvName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "selectedRefVersionTaskExeId"
            },
            "rightPort": {
                "actor": "Elvis1",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "luName"
            },
            "rightPort": {
                "actor": "Get Details of Reference Table",
                "name": "luName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Get Details of Reference Table",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "DbFetchField1",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "sourceEnvName"
            },
            "rightPort": {
                "actor": "DbFetchField1",
                "name": "sourceEnvName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Get Data From Cassandra",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "sourceEnvName"
            },
            "rightPort": {
                "actor": "Get Data From Cassandra",
                "name": "sourceEnvName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Get Table Fields From Cassandra",
                "name": "tableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "taskExecutionID"
            },
            "rightPort": {
                "actor": "Update TDMDB table for Reference Table__1",
                "name": "taskExecutionID"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Update TDMDB table for Reference Table__1",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "taskExecutionID"
            },
            "rightPort": {
                "actor": "Update TDMDB table during loop",
                "name": "taskExecutionID"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Update TDMDB table during loop",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "taskExecutionID"
            },
            "rightPort": {
                "actor": "Update TDMDB table for Reference Table",
                "name": "taskExecutionID"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Update TDMDB table for Reference Table",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "Logger3",
                "name": "refTableName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refTableName"
            },
            "rightPort": {
                "actor": "JavaScript2",
                "name": "refTableName"
            }
        }
    ]
}