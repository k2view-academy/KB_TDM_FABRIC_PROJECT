tags: TDM
stages:
  Get Inputs:
    actors:
      'luName  ':
        parent: Uppercase
        in:
          string:
            external: luName
      sourceEnvName:
        parent: Const
        in:
          value:
            const: null
            external: sourceEnvName
        out:
          value:
            schema: string
      TDMDB_SCHEMA:
        parent: FabricSetRead
        in:
          key:
            const: TDMDB_SCHEMA
            default: false
      isParamsCoupling:
        parent: LuFunction
        in:
          functionName:
            const: isParamsCoupling
        out:
          result:
            schema: boolean
  ParamsCoupling:
    dependsOn: Get Inputs
    actors:
      EqualsIgnoreCase:
        parent: EqualsIgnoreCase
        condition: result
        in:
          b:
            const: 'true'
            schema: string
          a:
            link: isParamsCoupling/result
      LuParamsMapping Lookup:
        parent: MTableLookup
        in:
          mtable:
            const: LuParamsMapping
          mtableCaseSensitive:
            const: false
          lu_name:
            external: luName
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
        out:
          result:
            schema: '#ref'
    split: '--------------------'
  NormalParams:
    else: true
    dependsOn: Get Inputs
    actors:
      LuParams:
        parent: MTableLookup
        in:
          mtable:
            const: LuParams
          mtableCaseSensitive:
            const: false
          lu_name:
            external: luName
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
        out:
          result:
            schema: '#ref'
  Build String Of Values:
    dependsOn: ParamsCoupling
    actors:
      JavaScript:
        parent: JavaScript
        in:
          script:
            const:
              userCode: |
                flowArgs.mtable = input;
                const data = [...flowArgs.mtable];
                const luName = flowArgs.luName.toUpperCase();
                const result = data.map(item => `'"${luName}.${item.param_name}"'`).join(', ');
                result;
              script: |-
                flowArgs.mtable = input;
                var data = [].concat(flowArgs.mtable);
                var luName = flowArgs.luName.toUpperCase();
                var result = data.map(function (item) {
                  return "'\"" + luName + "." + item.param_name + "\"'";
                }).join(', ');
                result;
          input:
            link: LuParamsMapping Lookup/result
            schema: '#ref'
            mandatory: false
        out:
          result:
            schema: string
    split: '--------------------'
  'Build String Of Values ':
    dependsOn: NormalParams
    actors:
      'JavaScript   ':
        parent: JavaScript
        in:
          script:
            const:
              userCode: |
                flowArgs.mtable = input;
                const data = [...flowArgs.mtable];
                const luName = flowArgs.luName.toUpperCase();
                const result = data.map(item => `'"${luName}.${item.column_name}"'`.toUpperCase()).join(', ');
                result;
              script: |-
                flowArgs.mtable = input;
                var data = [].concat(flowArgs.mtable);
                var luName = flowArgs.luName.toUpperCase();
                var result = data.map(function (item) {
                  return ("'\"" + luName + "." + item.column_name + "\"'").toUpperCase();
                }).join(', ');
                result;
          input:
            link: LuParams/result
            schema: '#ref'
            mandatory: false
        out:
          result:
            schema: string
  Query with field:
    actors:
      Query Output:
        parent: StringFormat
        in:
          format:
            const: SELECT * FROM ${schema}.tdm_params_distinct_values WHERE lu_name
              = '${lu}' AND SOURCE_ENVIRONMENT = '${env}' AND field_name IN ( ${names}
              );
          schema:
            link: TDMDB_SCHEMA/result
            schema: string
            mandatory: false
          lu:
            link: luName  /string
            schema: string
            mandatory: false
          env:
            link: sourceEnvName/value
            schema: string
            mandatory: false
          names:
            link:
            - JavaScript/result
            - JavaScript   /result
            schema: string
            mandatory: false
        out:
          string:
            external: query
schemas:
  LuParamsMapping Lookup.out.result:
    type: array
    items:
      type: object
      properties:
        lu_name:
          type: string
        param_name:
          type: string
        lu_table:
          type: string
        lu_table_field:
          type: string
  LuParams.out.result:
    type: array
    items:
      type: object
      properties:
        lu_name:
          type: string
        column_name:
          type: string
        sql:
          type: string
  JavaScript.in.input:
    type: array
    items:
      type: object
      properties:
        lu_name:
          type: string
        param_name:
          type: string
        lu_table:
          type: string
        lu_table_field:
          type: string
  JavaScript   .in.input:
    type: array
    items:
      type: object
      properties:
        lu_name:
          type: string
        param_name:
          type: string
        lu_table:
          type: string
        lu_table_field:
          type: string
