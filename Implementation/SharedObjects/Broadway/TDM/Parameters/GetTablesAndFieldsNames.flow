tags: TDM
stages:
  Get Inputs:
    actors:
      TDMDB_SCHEMA:
        parent: FabricSetRead
        in:
          key:
            const: TDMDB_SCHEMA
            default: false
      COMBO_MAX_COUNT:
        parent: FabricSetRead
        in:
          key:
            const: COMBO_MAX_COUNT
            default: false
      sourceEnv:
        parent: Const
        in:
          value:
            const: null
            external: sourceEnv
        out:
          value:
            schema: string
      Uppercase luName:
        parent: Uppercase
        in:
          string:
            external: luName
      TDM_PARAMETERS_SEPARATOR:
        parent: FabricSetRead
        in:
          key:
            const: TDM_PARAMETERS_SEPARATOR
            default: false
  Mtable Lookup:
    actors:
      MTableLookup:
        parent: MTableLookup
        in:
          mtable:
            const: LuParamsMapping
          lu_name:
            external: luName
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
        out:
          result:
            schema: '#ref'
      FilterOutCombos:
        parent: InnerFlow
        in:
          flowName:
            const: FilterOutCombos
          sourceEnv:
            link: sourceEnv/value
            schema: string
            mandatory: false
          luName:
            external: luName
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
  Remove White Spaces:
    actors:
      Trim Lu Name:
        parent: Trim
        in:
          string:
            link:
              path: MTableLookup/result/lu_name
              iterate: Iterate
      Trim Table Name:
        parent: Trim
        in:
          string:
            link:
              path: MTableLookup/result/lu_table
              iterate: Iterate
      Trim Column Name:
        parent: Trim
        in:
          string:
            link:
              path: MTableLookup/result/lu_table_field
              iterate: Iterate
      Trim Field Name:
        parent: Trim
        in:
          string:
            link:
              path: MTableLookup/result/param_name
              iterate: Iterate
  Get Names:
    actors:
      Lu Name:
        parent: Lowercase
        in:
          string:
            link: Trim Lu Name/string
      Uppercase LU NAME:
        parent: Uppercase
        in:
          string:
            link: Trim Lu Name/string
      Table Name:
        parent: Lowercase
        in:
          string:
            link: Trim Table Name/string
      Column Name:
        parent: Lowercase
        in:
          string:
            link: Trim Column Name/string
  Check If Its Exported:
    actors:
      'DbCommand ':
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: |
              SELECT EXISTS (
                  SELECT 1
                  FROM information_schema.columns
                  WHERE table_schema = ${schema_name}
                    AND table_name = ${table_name}
                    AND column_name = ${column_name}
              );
          schema_name:
            link: Lu Name/string
            schema: string
            mandatory: false
          table_name:
            link: Table Name/string
            schema: string
            mandatory: false
          column_name:
            link: Column Name/string
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
  Exists:
    dependsOn: Check If Its Exported
    actors:
      Field Exists:
        parent: EqualsIgnoreCase
        condition: result
        in:
          b:
            const: 'true'
            schema: string
          a:
            link:
              path: DbCommand /result/exists
              iterate: First
      ${Lu}${field}:
        parent: StringFormat
        in:
          format:
            const: ${Lu}.${field}
          field:
            link:
              path: Trim Field Name/string
              pos: 0
            schema: '#ref'
            mandatory: false
          Lu:
            link: Uppercase LU NAME/string
            schema: string
            mandatory: false
    split: '--------------------'
  Else:
    else: true
    dependsOn: Check If Its Exported
  Column Exists:
    dependsOn: Exists
    actors:
      JavaScript1:
        parent: JavaScript
        in:
          script:
            const:
              userCode: |
                function doesColumnExist(array, column) {
                    return array.indexOf(column) !== -1;
                }
                const array = [...arr];
                const column = input;
                const exists = doesColumnExist(array, column);
                exists; // true
              script: |-
                function doesColumnExist(array, column) {
                  return array.indexOf(column) !== -1;
                }

                var array = [].concat(arr);
                var column = input;
                var exists = doesColumnExist(array, column);
                exists; // true
          input:
            link: ${Lu}${field}/string
            schema: string
            mandatory: false
          arr:
            link: FilterOutCombos/result
            schema: array
            mandatory: false
        out:
          result:
            schema: boolean
    split: '--------------------'
  Do Nothing:
    dependsOn: Else
  Filter:
    dependsOn: Column Exists
    actors:
      Filter Field:
        parent: EqualsIgnoreCase
        condition: result
        in:
          b:
            const: 'true'
            schema: string
          a:
            link:
              path: JavaScript1/result
              iterate: First
      map value:
        parent: StringFormat
        in:
          format:
            const: ${field}${seperator}${column}
          seperator:
            link: TDM_PARAMETERS_SEPARATOR/result
            schema: string
            mandatory: false
          column:
            link: Column Name/string
            schema: string
            mandatory: false
          field:
            link: ${Lu}${field}/string
            schema: string
            mandatory: false
    split: '--------------------'
  'Else  ':
    else: true
    dependsOn: Column Exists
    split: '--------------------'
  'Do Nothing ':
    dependsOn: Do Nothing
  Build Map Data:
    last: 1
    dependsOn: Filter
    actors:
      Output:
        parent: MapBuild
        in:
          duplicateKeys:
            const: allUnique
          key:
            link: Table Name/string
          value:
            link: map value/string
        out:
          map:
            external: map
            schema: '#ref'
          previous:
            schema: '#ref'
    split: '--------------------'
  'Do Nothing   ':
    last: 1
    dependsOn: 'Else  '
    split: '--------------------'
  'Do Nothing  ':
    last: 1
    dependsOn: 'Do Nothing '
schemas:
  MTableLookup.out.result:
    type: array
    items:
      type: object
      properties:
        lu_name:
          type: string
        param_name:
          type: string
        lu_table:
          type: string
        lu_table_field:
          type: string
  FilterOutCombos.out.result:
    type: array
    items:
      type: string
  DbCommand .out.result:
    type: array
    items:
      type: object
      properties:
        exists:
          type: boolean
  ${Lu}${field}.in.field:
    type: array
    items:
      type: string
  Output.out.map:
    type: object
    properties:
      address:
        type: array
        items:
          type: string
      cust_totals:
        type: array
        items:
          type: string
      cases:
        type: array
        items:
          type: string
      case_note:
        type: array
        items:
          type: string
      activity:
        type: array
        items:
          type: string
      contract:
        type: array
        items:
          type: string
  Output.out.previous:
    type: array
    items:
      type: string
