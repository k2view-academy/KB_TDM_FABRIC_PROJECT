{
    "tags": [
        "TDM"
    ],
    "levels": [
        {
            "stages": [
                {
                    "name": "Build the Address Array",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Const1",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "'"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Split Input to Array",
                            "actorType": {
                                "parentType": "Split",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 2",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Trim",
                            "actorType": {
                                "parentType": "Trim",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 1",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Concat2",
                            "actorType": {
                                "parentType": "Concat",
                                "inputs": [
                                    {
                                        "name": "delimiter",
                                        "const": ""
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build the Address List for the Query",
                    "dependsOnList": [],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "StringBuild1",
                            "actorType": {
                                "parentType": "StringBuild",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 8",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Query1",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "SELECT distinct cust.customer_id FROM public.customer cust, public.address  addr where cust.customer_id = addr.customer_id and addr.state in ("
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Query2",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": ")"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Build the Select Query",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Concat1",
                            "actorType": {
                                "parentType": "Concat",
                                "inputs": [
                                    {
                                        "name": "delimiter",
                                        "const": ""
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get The instances",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Get the entity list",
                            "remark": "It is better to use the NoOfEntities limit in the flow that retrieves the list of entities from performance POV.",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "CRM_DB"
                                    },
                                    {
                                        "name": "sql",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customer_id": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Init Record Count",
                            "actorType": {
                                "parentType": "InitRecordCount",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Logger1",
                            "actorType": {
                                "parentType": "Logger",
                                "inputs": [
                                    {
                                        "name": "message",
                                        "const": "Select statement: ${0}"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Set the IID to a String",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "ToString1",
                            "actorType": {
                                "parentType": "ToString",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check if the instance is not reserved and load it",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Check Reserve And Load To Entity List Table",
                            "actorType": {
                                "parentType": "CheckReserveAndLoadToEntityList",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check if enough Entities were loaded",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Check And Stop Loop If enough records were added",
                            "actorType": {
                                "parentType": "CheckAndStopLoop",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Const1",
                "name": "value"
            },
            "rightPort": {
                "actor": "Concat2",
                "name": "elements"
            },
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "Const1",
                "name": "value"
            },
            "rightPort": {
                "actor": "Concat2",
                "name": "elements"
            },
            "arrayPosition": 2
        },
        {
            "leftPort": {
                "actor": "Split Input to Array",
                "name": "strings"
            },
            "rightPort": {
                "actor": "Trim",
                "name": "string"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "Trim",
                "name": "string"
            },
            "rightPort": {
                "actor": "Concat2",
                "name": "elements"
            },
            "arrayPosition": 1
        },
        {
            "leftPort": {
                "actor": "Concat2",
                "name": "string"
            },
            "rightPort": {
                "actor": "StringBuild1",
                "name": "input"
            },
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "StringBuild1",
                "name": "string"
            },
            "rightPort": {
                "actor": "Concat1",
                "name": "elements"
            },
            "arrayPosition": 1
        },
        {
            "leftPort": {
                "actor": "Query1",
                "name": "value"
            },
            "rightPort": {
                "actor": "Concat1",
                "name": "elements"
            },
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "Query2",
                "name": "value"
            },
            "rightPort": {
                "actor": "Concat1",
                "name": "elements"
            },
            "arrayPosition": 2
        },
        {
            "leftPort": {
                "actor": "Concat1",
                "name": "string"
            },
            "rightPort": {
                "actor": "Logger1",
                "name": "params"
            },
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "Concat1",
                "name": "string"
            },
            "rightPort": {
                "actor": "Get the entity list",
                "name": "sql"
            }
        },
        {
            "leftPort": {
                "actor": "Get the entity list",
                "name": "result"
            },
            "rightPort": {
                "actor": "ToString1",
                "name": "value"
            },
            "iterate": "Iterate",
            "path": [
                "customer_id"
            ]
        },
        {
            "leftPort": {
                "actor": "ToString1",
                "name": "string"
            },
            "rightPort": {
                "actor": "Check Reserve And Load To Entity List Table",
                "name": "SOURCE_IID"
            }
        },
        {
            "leftPort": {
                "actor": "Check Reserve And Load To Entity List Table",
                "name": "recordLoaded"
            },
            "rightPort": {
                "actor": "Check And Stop Loop If enough records were added",
                "name": "RECORD_LOADED"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "State_List"
            },
            "rightPort": {
                "actor": "Split Input to Array",
                "name": "string"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "LU_NAME"
            },
            "rightPort": {
                "actor": "Check Reserve And Load To Entity List Table",
                "name": "LU_NAME"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "NUM_OF_ENTITIES"
            },
            "rightPort": {
                "actor": "Check And Stop Loop If enough records were added",
                "name": "NUM_OF_ENTITIES"
            }
        }
    ]
}