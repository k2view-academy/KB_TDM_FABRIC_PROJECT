tags: TDM
stages:
  Get Field's Values:
    actors:
      Get Reserve Retention Value:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: RESERVE_RETENTION_PERIOD_VALUE
            default: false
      Now:
        parent: Now
      Get Reserve Retention Type__1:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: RESERVE_RETENTION_PERIOD_TYPE
            default: false
      Get Target Entity ID:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: TARGET_ENTITY_ID
            default: false
      Get Business Entity ID:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: BE_ID
            default: false
        out:
          result:
            schema: integer
      Get Target Environment ID:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: TARGET_ENVIRONMENT_ID
            default: false
        out:
          result:
            schema: integer
      Get Task ID:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: TDM_TASK_ID
            default: false
        out:
          result:
            schema: integer
      Get Task Execution ID:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: TDM_TASK_EXE_ID
            default: false
        out:
          result:
            schema: integer
      Get Session User:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: USER_NAME
            default: false
      Get User's Fabric Roles:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: USER_FABRIC_ROLES
            default: false
      Get Reserve Note:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: RESERVE_NOTE
            default: false
  Stage 8:
    actors:
      ToNumber1:
        parent: ToNumber
        in:
          value:
            link: Get Reserve Retention Value/result
            schema: string
  Calculate Retention:
    dependsOn: Stage 8
    actors:
      NotEquals1:
        parent: NotEquals
        condition: result
        in:
          a:
            link: ToNumber1/number
            schema: number
          b:
            const: 0
            schema: number
      GetNewEndDate1:
        parent: GetNewEndDate
        in:
          nowDate:
            link: Now/date
          retentionPeriodType:
            link: Get Reserve Retention Type__1/result
          retentionPeriodValue:
            link: ToNumber1/number
      Now Date Format:
        parent: DateFormat
        in:
          date:
            link: Now/date
    split: '--------------------'
  Stage 1:
    else: true
    transactional: false
    dependsOn: Stage 8
    actors:
      ErrorHandler3:
        parent: ErrorHandler
        error: result
        in:
          config:
            const:
            - exceptionKey: java.lang.Exception
              conditions:
                message: ''
              actions:
                suppress: false
                log: true
                flowName: PopulateTableErrorsWithFailed
      Throw Exception, A Tester without Limit On Reservation:
        parent: Fail
        in:
          message:
            const: A tester Must have a limit on the reservation period
  Check if Entity Already Reserved:
    dependsOn: Calculate Retention
    actors:
      Date Format:
        parent: DateFormat
        in:
          date:
            link: GetNewEndDate1/newEndDate
      Get Reserve Max Days For Tester:
        parent: FabricSetRead
        in:
          interface:
            default: false
          key:
            const: MAX_RESERVATION_DAYS_FOR_TESTER
            default: false
        out:
          result:
            schema: integer
      DbFetchFirstRow1:
        parent: DbFetchFirstRow
        in:
          interface:
            const: TDM
          sql:
            const: "SELECT TDM_RESERVED_ENTITIES.reserve_owner, TDM_RESERVED_ENTITIES.start_datetime,\
              \ TDM_RESERVED_ENTITIES.end_datetime\r\nFROM ${@schema}.TDM_RESERVED_ENTITIES\r\
              \nWHERE TDM_RESERVED_ENTITIES.entity_id = ${entityId} AND \r\nTDM_RESERVED_ENTITIES.be_id\
              \ = ${beId} AND\r\nTDM_RESERVED_ENTITIES.env_id = ${envId} AND\r\nTDM_RESERVED_ENTITIES.start_datetime\
              \ <= timezone('UTC', now()) AND\r\n(TDM_RESERVED_ENTITIES.end_datetime\
              \ IS NULL OR TDM_RESERVED_ENTITIES.end_datetime >= timezone('UTC', now()))\r\
              \nUNION SELECT null as reserve_owner, null as start_datetime, null as\
              \ end_datetime\r\nLIMIT 1"
          entityId:
            link: Get Target Entity ID/result
            schema: string
            mandatory: false
          beId:
            link: Get Business Entity ID/result
            schema: integer
            mandatory: false
          envId:
            link: Get Target Environment ID/result
            schema: integer
            mandatory: false
          schema:
            const: '@TDMDB_SCHEMA@'
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
    split: '--------------------'
  Stage 3:
    transactional: false
    dependsOn: Stage 1
  Stage 7: {
    }
  Check Record Exists:
    dependsOn: Stage 7
    actors:
      NotNull1:
        parent: NotNull
        condition: result
        in:
          value:
            link: DbFetchFirstRow1/result/reserve_owner
            schema: string
      Calculate Max End Date:
        parent: DateAdd
        in:
          days:
            const: null
            link: Get Reserve Max Days For Tester/result
            schema: integer
          date:
            link: DbFetchFirstRow1/result/start_datetime
      Compare Owner with User:
        parent: Equals
        in:
          a:
            link: DbFetchFirstRow1/result/reserve_owner
            schema: string
          b:
            link: Get Session User/result
            schema: string
      StringFormat1:
        parent: StringFormat
        height: 511
        in:
          format:
            const: 'Entity cannot be reserved by user ${userName} as it is reserved
              by user: ${owner}'
          owner:
            link: DbFetchFirstRow1/result/reserve_owner
            schema: string
            mandatory: false
          userName:
            link: Get Session User/result
            schema: string
            mandatory: false
    split: '--------------------'
  Insert New Reservation:
    else: true
    transactional: false
    dependsOn: Stage 7
    actors:
      ErrorHandler4:
        parent: ErrorHandler
        error: result
        in:
          config:
            const:
            - exceptionKey: java.lang.Exception
              conditions:
                message: ''
              actions:
                suppress: false
                log: true
                flowName: PopulateTableErrorsWithFailed
      Insert Record Into TDM_RESERVED_ENTITIES:
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: "INSERT INTO ${@schema}.TDM_RESERVED_ENTITIES (entity_id, be_id,\
              \ env_id, task_id, task_execution_id, start_datetime, end_datetime,\
              \ reserve_owner, reserve_notes) \r\nVALUES (${entityId}, ${beId}, ${envId},\
              \ ${taskId}, ${taskExecutionId}, timezone('UTC', now()), ${newEndDate},\
              \ ${userName}, ${reserveNote})\r\nON CONFLICT ON CONSTRAINT TDM_RESERVED_ENTITIES_PKEY\
              \ DO UPDATE SET task_id = ${taskId}, task_execution_id = ${taskExecutionId},\
              \ \r\n    start_datetime = timezone('UTC', now()), end_datetime = ${newEndDate},\
              \ reserve_owner = ${userName}, reserve_notes = ${reserveNote}\r\nWHERE\
              \ TDM_RESERVED_ENTITIES.entity_id = ${entityId} AND \r\nTDM_RESERVED_ENTITIES.be_id\
              \ = ${beId} AND\r\nTDM_RESERVED_ENTITIES.env_id = ${envId}"
          entityId:
            link: Get Target Entity ID/result
            schema: string
            mandatory: false
          beId:
            link: Get Business Entity ID/result
            schema: integer
            mandatory: false
          envId:
            link: Get Target Environment ID/result
            schema: integer
            mandatory: false
          taskId:
            link: Get Task ID/result
            schema: integer
            mandatory: false
          taskExecutionId:
            link: Get Task Execution ID/result
            schema: integer
            mandatory: false
          newEndDate:
            link: Date Format/string
            schema: string
            mandatory: false
          userName:
            link: Get Session User/result
            schema: string
            mandatory: false
          reserveNote:
            link: Get Reserve Note/result
            schema: string
            mandatory: false
          schema:
            const: '@TDMDB_SCHEMA@'
            schema: string
            mandatory: false
    split: '--------------------'
  Stage 4:
    transactional: false
    dependsOn: Stage 7
  Check Owner:
    transactional: false
    dependsOn: Check Record Exists
    actors:
      Check if the user is the owner:
        parent: Equals
        condition: result
        in:
          a:
            link: Compare Owner with User/result
            schema: boolean
          b:
            const: true
            schema: boolean
      GetNewEndDate2:
        parent: GetNewEndDate
        in:
          retentionPeriodValue:
            link: ToNumber1/number
            schema: number
          retentionPeriodType:
            link: Get Reserve Retention Type__1/result
          nowDate:
            link: DbFetchFirstRow1/result/start_datetime
      StringFormat2:
        parent: StringFormat
        height: 416
        in:
          format:
            const: Entity cannot be reserved by user ${userName} as the new End Date
              Exceed the Max End Date allowed to a Tester
          userName:
            link: Get Session User/result
            schema: string
            mandatory: false
    split: '--------------------'
  The entity is reserved by other:
    else: true
    transactional: false
    dependsOn: Check Record Exists
    actors:
      ErrorHandler2:
        parent: ErrorHandler
        error: result
        in:
          config:
            const:
            - exceptionKey: java.lang.Exception
              conditions:
                message: ''
              actions:
                suppress: false
                log: true
                flowName: PopulateTableErrorsWithFailed
      Throw Exception, reserved by other:
        parent: Fail
        in:
          message:
            const: null
            link: StringFormat1/string
    split: '--------------------'
  Stage 2:
    transactional: false
    dependsOn: Insert New Reservation
    split: '--------------------'
  Stage 5:
    transactional: false
    dependsOn: Stage 4
  Update the End Date:
    transactional: false
    dependsOn: Check Owner
    actors:
      JavaScript1:
        parent: JavaScript
        condition: result
        in:
          script:
            const:
              userCode: "var endDateIsValid = true;\r\nif (maxDays > 0) {\r\n    if\
                \ (maxEndDate < newEndDate) {\r\n        endDateIsValid = false;\r\
                \n    }\r\n}\r\nendDateIsValid;"
              script: |-
                var endDateIsValid = true;

                if (maxDays > 0) {
                  if (maxEndDate < newEndDate) {
                    endDateIsValid = false;
                  }
                }

                endDateIsValid;
          maxDays:
            link: Get Reserve Max Days For Tester/result
            schema: integer
            mandatory: false
          maxEndDate:
            link: Calculate Max End Date/date
            schema: date
            mandatory: false
          newEndDate:
            link: GetNewEndDate2/newEndDate
            schema: date
            mandatory: false
        out:
          result:
            schema: boolean
      Update the End date:
        parent: DbLoad
        in:
          interface:
            const: TDM
          command:
            const: update
          schema:
            const: '@TDMDB_SCHEMA@'
          table:
            const: tdm_reserved_entities
          fields:
            const:
            - task_id
            - task_execution_id
            - end_datetime
            - reserve_notes
          keys:
            const:
            - entity_id
            - be_id
            - env_id
          dialect:
            const: postgres
          end_datetime:
            link: GetNewEndDate2/newEndDate
            schema: date
            mandatory: false
          entityId:
            link: Get Target Entity ID/result
            schema: string
            mandatory: false
          beId:
            link: Get Business Entity ID/result
            schema: integer
            mandatory: false
          envId:
            link: Get Target Environment ID/result
            schema: integer
            mandatory: false
          task_id:
            link: Get Task ID/result
            schema: string
            mandatory: false
          task_execution_id:
            link: Get Task Execution ID/result
            schema: string
            mandatory: false
          reserve_notes:
            link: Get Reserve Note/result
            schema: string
            mandatory: false
    split: '--------------------'
  Bad End Date:
    else: true
    transactional: false
    dependsOn: Check Owner
    actors:
      ErrorHandler1:
        parent: ErrorHandler
        error: result
        in:
          config:
            const:
            - exceptionKey: java.lang.Exception
              conditions:
                message: ''
              actions:
                suppress: false
                log: true
                flowName: PopulateTableErrorsWithFailed
      Throw Exception, Bad End Date:
        parent: Fail
        in:
          message:
            const: null
            link: StringFormat2/string
    split: '--------------------'
  Do Nothing:
    transactional: false
    dependsOn: The entity is reserved by other
    split: '--------------------'
  Stage 15:
    transactional: false
    dependsOn: Stage 2
    split: '--------------------'
  Stage 6:
    transactional: false
    dependsOn: Stage 5
schemas:
  DbFetchFirstRow1.out.result:
    type: object
    properties:
      reserve_owner:
        type: string
      start_datetime:
        type: date
      end_datetime:
        type: date
