tags: TDM
stages:
  'Init ':
    actors:
      initAIInterfacesCheck:
        parent: InnerFlow
        in:
          flowName:
            const: initAIInterfacesCheck
        out:
          message:
            schema: string
  Active:
    actors:
      TDMDB_SCHEMA:
        parent: FabricSetRead
        in:
          key:
            const: TDMDB_SCHEMA
      AI_DB_K2SYSTEM:
        parent: FabricSetRead
        in:
          key:
            const: AI_DB_INTERFACE
            default: false
      Get k2system Schema Name:
        parent: InnerFlow
        in:
          flowName:
            const: Getk2SystemSchemaName
        out:
          result:
            schema: string
  'True':
    dependsOn: Active
    actors:
      'Empty Message ':
        parent: EqualsIgnoreCase
        condition: result
        in:
          b:
            schema: string
          a:
            link: initAIInterfacesCheck/message
      'DbCommand ':
        parent: DbCommand
        in:
          interface:
            const: null
            link: AI_DB_K2SYSTEM/result
          sql:
            const: select id as task_execution_id from ${@k2systemName}.task_executions
              where status='DONE' and task_type='TRAINING' ;
          k2systemName:
            link: Get k2system Schema Name/result
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
    split: '--------------------'
  'False':
    else: true
    transactional: false
    dependsOn: Active
    actors:
      'Output Case 1  ':
        parent: Const
        in:
          value:
            const: null
            link: initAIInterfacesCheck/message
        out:
          value:
            external: message
  Stage 1:
    last: 1
    transactional: false
    dependsOn: 'True'
    actors:
      StringBuild1:
        parent: StringBuild
        in:
          input:
            link:
              path: DbCommand /result/task_execution_id
              iterate: Iterate
              pos: 0
    split: '--------------------'
  Stage 5:
    last: 1
    transactional: false
    dependsOn: 'False'
  Stage 8:
    transactional: false
    dependsOn: Stage 1
    actors:
      Check For Training Models:
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: "SELECT count(l.task_execution_id) FROM  ${@TDMDB_SCHEMA}.tasks\
              \ t \r\nINNER JOIN\r\n${@TDMDB_SCHEMA}.task_execution_summary s ON s.task_id\
              \ = t.task_id\r\nINNER JOIN\r\n${@TDMDB_SCHEMA}.task_execution_list\
              \ l ON s.task_execution_id = l.task_execution_id \r\nWHERE\r\nt.task_type\
              \ = 'TRAINING'\r\nAND l.task_execution_id::BIGINT = ANY(string_to_array(${task_exe_id},\
              \ ',')::BIGINT[])\r\nAND l.execution_status <> 'failed'\r\nAND l.process_id\
              \ IN (-2, -1, 0)\r\nAND (SELECT COUNT(DISTINCT process_id)\r\nFROM ${@TDMDB_SCHEMA}.task_execution_list\
              \ l2\r\nWHERE l2.task_execution_id = l.task_execution_id\r\nAND l2.execution_status\
              \ = 'completed'\r\nAND l2.process_id IN (-2, -1, 0)) = 3\r\nAND l.process_id\
              \ = -1\r\nAND s.execution_status <> 'failed'\r\n"
          TDMDB_SCHEMA:
            link: TDMDB_SCHEMA/result
            schema: string
            mandatory: false
          task_exe_id:
            link: StringBuild1/string
            schema: integer
            mandatory: false
        out:
          result:
            schema: '#ref'
    split: '--------------------'
  Stage 9:
    transactional: false
    dependsOn: Stage 5
  Stage 6:
    transactional: false
    dependsOn: Stage 8
    actors:
      GreaterThanZero:
        parent: GreaterThan
        condition: result
        in:
          b:
            const: 0
          a:
            link:
              path: Check For Training Models/result/count
              iterate: First
      'Output Case 2  ':
        parent: StringFormat
        out:
          string:
            external: message
    split: '--------------------'
  Stage 7:
    else: true
    transactional: false
    dependsOn: Stage 8
    actors:
      'Output Case 3  ':
        parent: StringFormat
        in:
          format:
            const: Run a training task to create a training model before generating
              AI-based entities. Set the source env and the entity subset for the
              training process. Then select the AI Training option in the Target component.
        out:
          string:
            external: message
    split: '--------------------'
  Stage 10:
    transactional: false
    dependsOn: Stage 9
schemas:
  DbCommand .out.result:
    type: array
    items:
      type: object
      properties:
        task_execution_id:
          type: integer
  Check For Training Models.out.result:
    type: array
    items:
      type: object
      properties:
        count:
          type: integer
