tags: TDM
stages:
  Stage 1:
    actors:
      ls1:
        parent: ls
        in:
          interface:
            const: null
            external: LU_PATH
          path:
            const: Java/resources
          pattern:
            const: vdb_bkp.xml
        out:
          result:
            schema: '#ref'
  Stage 10:
    dependsOn: Stage 1
    actors:
      NotNull1:
        parent: NotNull
        condition: result
        in:
          value:
            link: ls1/result/name
      Read vdb from BKP:
        parent: FileRead
        in:
          interface:
            const: null
            external: LU_PATH
          path:
            const: Java/resources/vdb_bkp.xml
    split: '--------------------'
  Stage 11:
    else: true
    transactional: false
    dependsOn: Stage 1
    actors:
      Read vdb File:
        parent: FileRead
        in:
          interface:
            const: null
            external: LU_PATH
          path:
            const: vdb.k2vdb.xml
      cp1:
        parent: cp
        in:
          interface:
            const: null
            external: LU_PATH
          from:
            const: vdb.k2vdb.xml
          to:
            const: Java/resources/vdb_bkp.xml
  Stage 2:
    actors:
      Parse vdb XML:
        parent: XmlParser
        in:
          stream:
            link:
            - Read vdb from BKP/stream
            - Read vdb File/stream
        out:
          object:
            schema: '#ref'
          info:
            schema: '#ref'
  Stage 9:
    actors:
      Set TAR Diagram Graph:
        parent: JavaScript
        in:
          script:
            const:
              userCode: "var arrIn = [];\r\nvar objOut = {};\r\nvar startTablePosX=302;\r\
                \nvar tablePosX=302;\r\narrIn = [ ...objIn._value.Node ];\r\nvar arrTablePosX\
                \ = [];\r\nvar arrTablePosY = [];\r\nvar arrGroup = [];\r\n\r\nfor(var\
                \ i=0; i<arrIn.length; i++) {\r\n  var postSplit = arrIn[i]._attributes.pos.split(\"\
                \ \");\r\n  arrTablePosX.push(postSplit[0]);\r\n  arrTablePosY.push(postSplit[1]);\r\
                \n\r\n  arrIn[i]._attributes.pos = ((parseInt(postSplit[0])+tablePosX)\
                \ +\" \"+(parseInt(postSplit[1])+25) );\r\n}\r\n\r\narrTablePosX.sort(function(a,\
                \ b){return a - b});\r\narrTablePosY.sort(function(a, b){return a\
                \ - b});\r\nvar highestPosY = parseInt(arrTablePosY[arrTablePosY.length-1])+50;\r\
                \nvar lowestPosX = parseInt(arrTablePosX[0]);\r\n\r\narrGroup.push({\"\
                _attributes\": {\"name\": \"SOURCE Tables\",\"pos\": (startTablePosX-5)+\"\
                \ 15\",\"size\": \"300 300\",\"wasexpanded\": \"false\",\"expanded\"\
                : \"true\"}, \"_value\": {\"Node\": arrIn} });\r\n\r\nobjOut.DiagramGraph\
                \ = {\"_attributes\" : objIn._attributes, \"_value\" : {\"Group\"\
                :arrGroup}  };"
              script: |-
                var arrIn = [];
                var objOut = {};
                var startTablePosX = 302;
                var tablePosX = 302;
                arrIn = [].concat(objIn._value.Node);
                var arrTablePosX = [];
                var arrTablePosY = [];
                var arrGroup = [];

                for (var i = 0; i < arrIn.length; i++) {
                  var postSplit = arrIn[i]._attributes.pos.split(" ");

                  arrTablePosX.push(postSplit[0]);
                  arrTablePosY.push(postSplit[1]);
                  arrIn[i]._attributes.pos = parseInt(postSplit[0]) + tablePosX + " " + (parseInt(postSplit[1]) + 25);
                }

                arrTablePosX.sort(function (a, b) {
                  return a - b;
                });
                arrTablePosY.sort(function (a, b) {
                  return a - b;
                });
                var highestPosY = parseInt(arrTablePosY[arrTablePosY.length - 1]) + 50;
                var lowestPosX = parseInt(arrTablePosX[0]);
                arrGroup.push({
                  "_attributes": {
                    "name": "SOURCE Tables",
                    "pos": startTablePosX - 5 + " 15",
                    "size": "300 300",
                    "wasexpanded": "false",
                    "expanded": "true"
                  },
                  "_value": {
                    "Node": arrIn
                  }
                });
                objOut.DiagramGraph = {
                  "_attributes": objIn._attributes,
                  "_value": {
                    "Group": arrGroup
                  }
                };
          objIn:
            link: Parse vdb XML/object/VirtualDB/_value/DiagramGraph/_value/Graph
            schema: '#ref'
            mandatory: false
        out:
          result:
            schema: '#ref'
      Get Root Table IID:
        parent: InnerFlow
        in:
          flowName:
            const: getRootTableIID
          LU_PATH:
            external: LU_PATH
            schema: string
            editor:
              id: com.k2view.interface
              interfaceType:
              - LOCAL
              - SFTP
              - filesystem
              interfaces:
              - file://
            mandatory: false
          ROOT_TABLE:
            link: Parse vdb XML/object/VirtualDB/_value/RootView/_value
            schema: string
            mandatory: false
          ROOT_TABLE_KEY:
            external: TABLE_KEY
            schema: string
            mandatory: false
        out:
          rootInfo:
            schema: '#ref'
  Stage 3:
    actors:
      Add TDM tables:
        parent: JavaScript
        in:
          script:
            const:
              userCode: "var arrIn = [];\r\nvar objOut = {};\r\nvar tableObj = {};\r\
                \nvar tablesObjt = [];\r\narrIn = [ ...objIn ];\r\ntablesObjt = JSON.parse(tables);\r\
                \n\r\nfor(var i=0; i<tablesObjt.length; i++) {\r\n    tableObj = tablesObjt[i];\r\
                \n\r\n    if(arrIn.toString().indexOf(\"\"+tableObj.table_name)==-1){\r\
                \n        arrIn.push({\"_value\": tableObj.table_name});\r\n    }\r\
                \n}\r\n\r\nobjOut.Tables = {\"_value\" : { \"Table\": arrIn} };\r\n\
                objOut;"
              script: |-
                var arrIn = [];
                var objOut = {};
                var tableObj = {};
                var tablesObjt = [];
                arrIn = [].concat(objIn);
                tablesObjt = JSON.parse(tables);

                for (var i = 0; i < tablesObjt.length; i++) {
                  tableObj = tablesObjt[i];

                  if (arrIn.toString().indexOf("" + tableObj.table_name) == -1) {
                    arrIn.push({
                      "_value": tableObj.table_name
                    });
                  }
                }

                objOut.Tables = {
                  "_value": {
                    "Table": arrIn
                  }
                };
                objOut;
          objIn:
            link: Parse vdb XML/object/VirtualDB/_value/Tables/_value/Table
            schema: '#ref'
            mandatory: false
          tables:
            external: tables_to_add
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
      Add TDM Populations:
        parent: JavaScript
        in:
          script:
            const:
              userCode: |-
                var arrIn = [];
                var arrIn2 = [];
                var objTmp = [];
                var objTmp2 = [];
                var objOut = {};
                var tableObj = {};
                var tablesObjt = [];
                var popOrder;
                arrIn = [ ...objIn ];

                tablesObjt = JSON.parse(tables);

                // Update the original population order
                var origPopOrder;
                var newPopOrder;
                 print("arrIn: " + arrIn.toString());
                if(arrIn.toString().indexOf("FABRIC_TDM_ROOT")==-1) { // If TDM tables are present already, don't replace the population order
                    for(var i=0;i<arrIn.length;i++) {
                        objTmp = arrIn[i];
                        print("objTmp: " + objTmp + ", isArray: " + Array.isArray(objTmp._value.Populations._value.Population) + ", constract: " + ((objTmp._value.Populations._value.Population).constructor === Array));
                        //if (Array.isArray(objTmp._value.Populations._value.Population)) {
                            arrIn2 = [...objTmp._value.Populations._value.Population];
                            print("arrIn2 size: " + arrIn2.length);
                            if (arrIn2.length == 1) {
                                 origPopOrder = objTmp._value.Populations._value.Population._attributes.order
                                newPopOrder = (parseInt(origPopOrder)+1)+"";

                                arrIn[i]._value.Populations._value.Population._attributes.order=newPopOrder;
                            } else {
                                for (var j=0;j<arrIn2.length;j++) {
                                    objTmp2 = arrIn2[j];
                                    print("objTmp2: " + objTmp2);
                                    origPopOrder = objTmp2._attributes.order;
                                    newPopOrder = (parseInt(origPopOrder)+1)+"";

                                    arrIn[i]._value.Populations._value.Population[j]._attributes.order=newPopOrder;
                                }
                            }


                        //} else {
                        //    origPopOrder = objTmp._value.Populations._value.Population._attributes.order;
                        //    newPopOrder = (parseInt(origPopOrder)+1)+"";

                        //    arrIn[i]._value.Populations._value.Population._attributes.order=newPopOrder;
                        //}
                    }
                }

                // Add TDM tables population
                for(var i=0; i<tablesObjt.length; i++) {
                    tableObj = tablesObjt[i];
                    if (tableObj.table_name=='FABRIC_TDM_ROOT') {
                        popOrder = "1"; // Always set FABRIC_TDM_ROOT as order 1
                    } else if (tableObj.table_name=='LU_PARAMS') {
                        popOrder = "998";
                    } else if (tableObj.table_name=='TDM_BE_IIDS') { // New Table added for params Coupling option in TDM 9.1
                        popOrder = "1000";
                    } else {
                        popOrder = "999";
                    }
                    var popName = tableObj.population;

                    if(popName!=undefined) {
                        if(arrIn.toString().indexOf(""+tableObj.table_name)==-1){
                            popName = tableObj.population.toString().replace(tableObj.table_name+".","");
                            arrIn.push({"_attributes": {"name": tableObj.table_name}, "_value": { "Populations": { "_value": { "Population": { "_attributes": { "name": popName, "order": popOrder, "disabled": "false", "populationType": "Flow" } } } }}});
                        }
                    }
                }

                objOut.TablesProperties = {"_value" : { "TableProperties": arrIn} };
                objOut;
              script: |-
                var arrIn = [];
                var arrIn2 = [];
                var objTmp = [];
                var objTmp2 = [];
                var objOut = {};
                var tableObj = {};
                var tablesObjt = [];
                var popOrder;
                arrIn = [].concat(objIn);
                tablesObjt = JSON.parse(tables); // Update the original population order

                var origPopOrder;
                var newPopOrder;
                print("arrIn: " + arrIn.toString());

                if (arrIn.toString().indexOf("FABRIC_TDM_ROOT") == -1) {
                  // If TDM tables are present already, don't replace the population order
                  for (var i = 0; i < arrIn.length; i++) {
                    objTmp = arrIn[i];
                    print("objTmp: " + objTmp + ", isArray: " + Array.isArray(objTmp._value.Populations._value.Population) + ", constract: " + (objTmp._value.Populations._value.Population.constructor === Array)); //if (Array.isArray(objTmp._value.Populations._value.Population)) {

                    arrIn2 = [].concat(objTmp._value.Populations._value.Population);
                    print("arrIn2 size: " + arrIn2.length);

                    if (arrIn2.length == 1) {
                      origPopOrder = objTmp._value.Populations._value.Population._attributes.order;
                      newPopOrder = parseInt(origPopOrder) + 1 + "";
                      arrIn[i]._value.Populations._value.Population._attributes.order = newPopOrder;
                    } else {
                      for (var j = 0; j < arrIn2.length; j++) {
                        objTmp2 = arrIn2[j];
                        print("objTmp2: " + objTmp2);
                        origPopOrder = objTmp2._attributes.order;
                        newPopOrder = parseInt(origPopOrder) + 1 + "";
                        arrIn[i]._value.Populations._value.Population[j]._attributes.order = newPopOrder;
                      }
                    } //} else {
                    //    origPopOrder = objTmp._value.Populations._value.Population._attributes.order;
                    //    newPopOrder = (parseInt(origPopOrder)+1)+"";
                    //    arrIn[i]._value.Populations._value.Population._attributes.order=newPopOrder;
                    //}

                  }
                } // Add TDM tables population


                for (var i = 0; i < tablesObjt.length; i++) {
                  tableObj = tablesObjt[i];

                  if (tableObj.table_name == 'FABRIC_TDM_ROOT') {
                    popOrder = "1"; // Always set FABRIC_TDM_ROOT as order 1
                  } else if (tableObj.table_name == 'LU_PARAMS') {
                    popOrder = "998";
                  } else if (tableObj.table_name == 'TDM_BE_IIDS') {
                    // New Table added for params Coupling option in TDM 9.1
                    popOrder = "1000";
                  } else {
                    popOrder = "999";
                  }

                  var popName = tableObj.population;

                  if (popName != undefined) {
                    if (arrIn.toString().indexOf("" + tableObj.table_name) == -1) {
                      popName = tableObj.population.toString().replace(tableObj.table_name + ".", "");
                      arrIn.push({
                        "_attributes": {
                          "name": tableObj.table_name
                        },
                        "_value": {
                          "Populations": {
                            "_value": {
                              "Population": {
                                "_attributes": {
                                  "name": popName,
                                  "order": popOrder,
                                  "disabled": "false",
                                  "populationType": "Flow"
                                }
                              }
                            }
                          }
                        }
                      });
                    }
                  }
                }

                objOut.TablesProperties = {
                  "_value": {
                    "TableProperties": arrIn
                  }
                };
                objOut;
          objIn:
            link: Parse vdb XML/object/VirtualDB/_value/TablesProperties/_value/TableProperties
            schema: '#ref'
            mandatory: false
          tables:
            external: tables_to_add
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
      Set TDM Diagram Graph:
        parent: JavaScript
        in:
          script:
            const:
              userCode: "var arrIn = [];\r\nvar arrTmp = [];\r\nvar arrGroup = [];\r\
                \nvar objOut = {};\r\nvar tableObj = {};\r\nvar tablesObjt = [];\r\
                \nvar tablePosX=15;\r\nvar tablePosY=50;\r\nvar posYIncrement = 150;\r\
                \narrIn = [ ...objIn ];\r\narrGroup = [...objIn._value.Group ];\r\n\
                \r\ntablesObjt = JSON.parse(tables);\r\n\r\nfor(var i=0; i<tablesObjt.length;\
                \ i++) {\r\n    tableObj = tablesObjt[i];\r\n    \r\n    if(arrIn.toString().indexOf(\"\
                \"+tableObj.table_name)==-1){\r\n        arrTmp.push({\"_attributes\"\
                : { \"name\": tableObj.table_name, \"pos\": tablePosX+\" \"+tablePosY,\
                \ \"size\": \"257 136\", \"listGroupSize\": \"250 100\", \"viewType\"\
                : \"Table\" }});\r\n        if(i==0) {\r\n            tablePosY =\
                \ 275;\r\n        }\r\n        tablePosY=(tablePosY+posYIncrement);\r\
                \n    }\r\n    \r\n}\r\n\r\narrGroup.push({\"_attributes\": {\"name\"\
                : \"TDM Tables\",\"pos\": (tablePosX-4)+\" \"+(tablePosY-10),\"size\"\
                : \"300 300\",\"wasexpanded\": \"false\",\"expanded\": \"true\"},\
                \ \"_value\": {\"Node\": arrTmp} });\r\n\r\nobjOut.DiagramGraph =\
                \ {\"_value\" : { \"Graph\": {\"_attributes\" : objIn._attributes,\
                \ \"_value\" : {\"Group\":arrGroup} }} };\r\nobjOut;"
              script: |-
                var arrIn = [];
                var arrTmp = [];
                var arrGroup = [];
                var objOut = {};
                var tableObj = {};
                var tablesObjt = [];
                var tablePosX = 15;
                var tablePosY = 50;
                var posYIncrement = 150;
                arrIn = [].concat(objIn);
                arrGroup = [].concat(objIn._value.Group);
                tablesObjt = JSON.parse(tables);

                for (var i = 0; i < tablesObjt.length; i++) {
                  tableObj = tablesObjt[i];

                  if (arrIn.toString().indexOf("" + tableObj.table_name) == -1) {
                    arrTmp.push({
                      "_attributes": {
                        "name": tableObj.table_name,
                        "pos": tablePosX + " " + tablePosY,
                        "size": "257 136",
                        "listGroupSize": "250 100",
                        "viewType": "Table"
                      }
                    });

                    if (i == 0) {
                      tablePosY = 275;
                    }

                    tablePosY = tablePosY + posYIncrement;
                  }
                }

                arrGroup.push({
                  "_attributes": {
                    "name": "TDM Tables",
                    "pos": tablePosX - 4 + " " + (tablePosY - 10),
                    "size": "300 300",
                    "wasexpanded": "false",
                    "expanded": "true"
                  },
                  "_value": {
                    "Node": arrTmp
                  }
                });
                objOut.DiagramGraph = {
                  "_value": {
                    "Graph": {
                      "_attributes": objIn._attributes,
                      "_value": {
                        "Group": arrGroup
                      }
                    }
                  }
                };
                objOut;
          objIn:
            link: Set TAR Diagram Graph/result
            schema: '#ref'
            mandatory: false
          tables:
            external: tables_to_add
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
      Create Root Population:
        parent: InnerFlow
        in:
          flowName:
            const: createRootTablePopulation
          LU_NAME:
            external: LU_NAME
            schema: string
            mandatory: false
          TABLE_NAME:
            link: Parse vdb XML/object/VirtualDB/_value/RootView/_value
            schema: string
            mandatory: false
          TABLE_KEY:
            external: TABLE_KEY
            schema: string
            mandatory: false
          SOURCE_INTERFACE:
            external: SOURCE_INTERFACE
            schema: string
            mandatory: false
          LU_PATH:
            external: LU_PATH
            schema: string
            mandatory: false
          SOURCE_SCHEMA:
            external: SOURCE_SCHEMA
            schema: string
            mandatory: false
          SOURCE_TABLE:
            external: SOURCE_TABLE
            schema: string
            mandatory: false
      Set TDM Tables Relations:
        parent: JavaScript
        in:
          script:
            const:
              userCode: |-
                var arrIn = [];
                var objTmp = [];
                var objOut = {};
                var tableObj = {};
                var tablesObjt = [];
                if (objIn != null) {
                  arrIn = [ ...objIn ];
                }

                tablesObjt = JSON.parse(tables);

                for(var i=0; i<tablesObjt.length; i++) {
                    tableObj = tablesObjt[i];

                    if(""+tableObj.table_name=="FABRIC_TDM_ROOT") {
                        objTmp = {
                                    "From": {
                                    "_attributes": {
                                      "tableType": "TableObject",
                                      "table": tableObj.table_name,
                                      "column": tableObj.column_name,
                                      "columnId": tableObj.id
                                    }
                                    },
                                    "To": {
                                    "_attributes": {
                                      "tableType": "TableObject",
                                      "table": rootTable.table_name,
                                      "populationObjectName": rootTable.population,
                                      "column": rootTable.column_name,
                                      "columnId": rootTable.id
                                    }
                                    }
                                  };
                        arrIn.push({"_value":objTmp});

                        // TAR root table
                        objTmp = {
                                    "From": {
                                    "_attributes": {
                                      "tableType": "TableObject",
                                      "table": tableObj.table_name,
                                      "column": tableObj.column_name,
                                      "columnId": tableObj.id
                                    }
                                    },
                                    "To": {
                                    "_attributes": {
                                      "tableType": "TableObject",
                                      "table": "TAR_"+rootTable.table_name,
                                      "populationObjectName": rootTable.population,
                                      "column": rootTable.column_name,
                                      "columnId": rootTable.id
                                    }
                                    }
                                  };
                        arrIn.push({"_value":objTmp});

                        //TDM BE IIDS New TDM Table For Params Coupling Method 9.1
                                objTmp = {
                                    "From": {
                                    "_attributes": {
                                      "tableType": "TableObject",
                                      "table": tableObj.table_name,
                                      "column": tableObj.column_name,
                                      "columnId": tableObj.id
                                    }
                                    },
                                    "To": {
                                    "_attributes": {
                                      "tableType": "TableObject",
                                      "table": "TDM_BE_IIDS",
                                      "populationObjectName": "populationTdmBeIID.flow",
                                      "column": "iid",
                                      "columnId": "iid"
                                    }
                                    }
                                  };
                        arrIn.push({"_value":objTmp});

                    }

                }
                objOut.DatabaseRelations = {"_value" : { "Relation": arrIn} };
                objOut;
              script: |-
                var arrIn = [];
                var objTmp = [];
                var objOut = {};
                var tableObj = {};
                var tablesObjt = [];

                if (objIn != null) {
                  arrIn = [].concat(objIn);
                }

                tablesObjt = JSON.parse(tables);

                for (var i = 0; i < tablesObjt.length; i++) {
                  tableObj = tablesObjt[i];

                  if ("" + tableObj.table_name == "FABRIC_TDM_ROOT") {
                    objTmp = {
                      "From": {
                        "_attributes": {
                          "tableType": "TableObject",
                          "table": tableObj.table_name,
                          "column": tableObj.column_name,
                          "columnId": tableObj.id
                        }
                      },
                      "To": {
                        "_attributes": {
                          "tableType": "TableObject",
                          "table": rootTable.table_name,
                          "populationObjectName": rootTable.population,
                          "column": rootTable.column_name,
                          "columnId": rootTable.id
                        }
                      }
                    };
                    arrIn.push({
                      "_value": objTmp
                    }); // TAR root table

                    objTmp = {
                      "From": {
                        "_attributes": {
                          "tableType": "TableObject",
                          "table": tableObj.table_name,
                          "column": tableObj.column_name,
                          "columnId": tableObj.id
                        }
                      },
                      "To": {
                        "_attributes": {
                          "tableType": "TableObject",
                          "table": "TAR_" + rootTable.table_name,
                          "populationObjectName": rootTable.population,
                          "column": rootTable.column_name,
                          "columnId": rootTable.id
                        }
                      }
                    };
                    arrIn.push({
                      "_value": objTmp
                    }); //TDM BE IIDS New TDM Table For Params Coupling Method 9.1

                    objTmp = {
                      "From": {
                        "_attributes": {
                          "tableType": "TableObject",
                          "table": tableObj.table_name,
                          "column": tableObj.column_name,
                          "columnId": tableObj.id
                        }
                      },
                      "To": {
                        "_attributes": {
                          "tableType": "TableObject",
                          "table": "TDM_BE_IIDS",
                          "populationObjectName": "populationTdmBeIID.flow",
                          "column": "iid",
                          "columnId": "iid"
                        }
                      }
                    };
                    arrIn.push({
                      "_value": objTmp
                    });
                  }
                }

                objOut.DatabaseRelations = {
                  "_value": {
                    "Relation": arrIn
                  }
                };
                objOut;
          objIn:
            link: Parse vdb XML/object/VirtualDB/_value/DatabaseRelations/_value/Relation
            schema: '#ref'
            mandatory: false
          tables:
            external: tables_to_add
            schema: string
            mandatory: false
          rootTable:
            link:
              path: Get Root Table IID/rootInfo
              iterate: First
            schema: '#ref'
            mandatory: false
        out:
          result:
            schema: '#ref'
      Copy TDM Globals:
        parent: InnerFlow
        in:
          flowName:
            const: copyGlobalsTDM
          LU_PATH:
            external: LU_PATH
            schema: string
            mandatory: false
          LU_NAME:
            external: LU_NAME
            schema: string
            mandatory: false
          LU_ROOT_TABLE:
            link: Get Root Table IID/rootInfo
            schema: '#ref'
            mandatory: false
      Update TAR Root Population:
        parent: InnerFlow
        disabled: true
        in:
          flowName:
            const: updateRootPopulationTAR
          LU_PATH:
            external: LU_PATH
            schema: string
            mandatory: false
          ROOT_TABLE:
            link: Parse vdb XML/object/VirtualDB/_value/RootView/_value
            schema: string
            mandatory: false
  Stage 4:
    actors:
      Merge with Original XML:
        parent: MapMerge
        height: 256
        in:
          maps:
            link:
            - path: Parse vdb XML/object/VirtualDB/_value
              pos: 0
            - path: Add TDM tables/result
              pos: 1
            - path: Add TDM Populations/result
              pos: 2
            - path: Set TDM Diagram Graph/result
              pos: 3
            - path: Set TDM Tables Relations/result
              pos: 4
            mandatory: false
        out:
          map:
            schema: '#ref'
      Const1:
        parent: Const
        in:
          value:
            const: null
            link: Get Root Table IID/rootInfo
            schema: '#ref'
        out:
          value:
            external: rootInfo
            schema: '#ref'
  Stage 5:
    actors:
      Add back version tag:
        parent: JavaScript
        in:
          script:
            const:
              userCode: "var objOut = {};\r\nvar objTmp = {};\r\n\r\nobjTmp._attributes\
                \ = vdbAttr;\r\nobjOut.VirtualDB = objTmp;\r\n\r\nobjTmp._value =\
                \ newXML;\r\nobjOut.VirtualDB = objTmp;\r\n\r\nobjOut.VirtualDB._value.RootView._value='FABRIC_TDM_ROOT';\r\
                \n\r\nobjOut;"
              script: |-
                var objOut = {};
                var objTmp = {};
                objTmp._attributes = vdbAttr;
                objOut.VirtualDB = objTmp;
                objTmp._value = newXML;
                objOut.VirtualDB = objTmp;
                objOut.VirtualDB._value.RootView._value = 'FABRIC_TDM_ROOT';
                objOut;
          newXML:
            link: Merge with Original XML/map
            schema: '#ref'
            mandatory: false
          vdbAttr:
            link: Parse vdb XML/object/VirtualDB/_attributes
            schema: '#ref'
            mandatory: false
        out:
          result:
            schema: '#ref'
  Stage 6:
    actors:
      Convert Obj to XML:
        parent: XmlStringify
        in:
          object:
            link: Add back version tag/result
  Stage 7:
    actors:
      Save vdb File:
        parent: FileWrite
        in:
          interface:
            const: null
            external: LU_PATH
          path:
            const: vdb.k2vdb.xml
          stream:
            link: Convert Obj to XML/xmlString
schemas:
  ls1.out.result:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
        createTime:
          type: integer
        lastModifiedTime:
          type: integer
        lastAccessTime:
          type: integer
        directory:
          type: boolean
  Parse vdb XML.out.object:
    type: object
    properties:
      VirtualDB:
        type: object
        properties:
          _attributes:
            type: object
            properties:
              version:
                type: string
          _value:
            type: object
            properties:
              Name:
                type: object
                properties:
                  _value:
                    type: string
              RootView:
                type: object
                properties:
                  _value:
                    type: string
              LuLazyDataUpdate:
                type: object
                properties:
                  _attributes:
                    type: object
                    properties:
                      syncMethod:
                        type: string
                      performEvery:
                        type: string
              EventsList:
                type: object
                properties: {
                  }
              IidFinderProp:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      NumberOfPartitions:
                        type: object
                        properties:
                          _value:
                            type: string
                      NumberOfJobs:
                        type: object
                        properties:
                          _value:
                            type: string
              Tables:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      Table:
                        type: array
                        items:
                          type: object
                          properties:
                            _value:
                              type: string
              TablesProperties:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      TableProperties:
                        type: array
                        items:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                            _value:
                              type: object
                              properties:
                                Populations:
                                  type: object
                                  properties:
                                    _value:
                                      type: object
                                      properties:
                                        Population:
                                          type: object
                                          properties:
                                            _attributes:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                order:
                                                  type: string
                                                disabled:
                                                  type: string
                                                populationType:
                                                  type: string
              EnrichmentsOrderList:
                type: object
                properties: {
                  }
              ReferencesList:
                type: object
                properties: {
                  }
              Relations:
                type: object
                properties: {
                  }
              DatabaseRelations:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      Relation:
                        type: array
                        items:
                          type: object
                          properties:
                            _value:
                              type: object
                              properties:
                                From:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        tableType:
                                          type: string
                                        table:
                                          type: string
                                        column:
                                          type: string
                                        columnId:
                                          type: string
                                To:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        tableType:
                                          type: string
                                        table:
                                          type: string
                                        populationObjectName:
                                          type: string
                                        column:
                                          type: string
              PreVCsSqlScript:
                type: object
                properties: {
                  }
              PostVCsSqlScript:
                type: object
                properties: {
                  }
              Indexes:
                type: object
                properties: {
                  }
              LudbProperties:
                type: object
                properties: {
                  }
              DiagramGraph:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      Graph:
                        type: object
                        properties:
                          _attributes:
                            type: object
                            properties:
                              version:
                                type: string
                              name:
                                type: string
                          _value:
                            type: object
                            properties:
                              Node:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        pos:
                                          type: string
                                        size:
                                          type: string
                                        listGroupSize:
                                          type: string
                                        viewType:
                                          type: string
  Parse vdb XML.out.info:
    type: object
    properties:
      version:
        type: string
      standalone:
        type: boolean
      header:
        type: string
  Set TAR Diagram Graph.in.objIn:
    type: array
    items:
      type: object
      properties: {
        }
  Set TAR Diagram Graph.out.result:
    type: array
    items:
      type: object
      properties:
        _value:
          type: string
  Get Root Table IID.out.rootInfo:
    type: array
    items:
      type: object
      properties:
        table_name:
          type: string
        column_name:
          type: string
        active:
          type: boolean
        population: {
          }
  Add TDM tables.in.objIn:
    type: object
    properties:
      _value:
        type: object
        properties:
          Table:
            type: array
            items:
              type: object
              properties:
                _value:
                  type: string
  Add TDM tables.out.result:
    type: object
    properties:
      Tables:
        type: object
        properties:
          _value:
            type: object
            properties:
              Table:
                type: array
                items:
                  type: object
                  properties:
                    _value:
                      type: string
  Add TDM Populations.in.objIn:
    type: object
    properties: {
      }
  Add TDM Populations.out.result:
    type: object
    properties:
      TablesProperties:
        type: object
        properties:
          _value:
            type: object
            properties:
              Table:
                type: array
                items:
                  type: object
                  properties:
                    _attributes:
                      type: object
                      properties:
                        name:
                          type: string
                    _value:
                      type: object
                      properties:
                        Populations:
                          type: object
                          properties:
                            _value:
                              type: object
                              properties:
                                Population:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        order:
                                          type: string
                                        disabled:
                                          type: string
                                        populationType:
                                          type: string
  Set TDM Diagram Graph.in.objIn:
    type: object
    properties: {
      }
  Set TDM Diagram Graph.out.result:
    type: object
    properties:
      TablesProperties:
        type: object
        properties:
          _value:
            type: object
            properties:
              Table:
                type: array
                items:
                  type: object
                  properties:
                    _attributes:
                      type: object
                      properties:
                        name:
                          type: string
                    _value:
                      type: object
                      properties:
                        Populations:
                          type: object
                          properties:
                            _value:
                              type: object
                              properties:
                                Population:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        order:
                                          type: string
                                        disabled:
                                          type: string
                                        populationType:
                                          type: string
  Set TDM Tables Relations.in.objIn:
    type: object
    properties: {
      }
  Set TDM Tables Relations.in.rootTable:
    type: array
    items:
      type: object
      properties:
        table_name:
          type: string
        column_name:
          type: string
        population:
          type: string
        id:
          type: string
  Set TDM Tables Relations.out.result:
    type: object
    properties:
      TablesProperties:
        type: object
        properties:
          _value:
            type: object
            properties:
              Table:
                type: array
                items:
                  type: object
                  properties:
                    _attributes:
                      type: object
                      properties:
                        name:
                          type: string
                    _value:
                      type: object
                      properties:
                        Populations:
                          type: object
                          properties:
                            _value:
                              type: object
                              properties:
                                Population:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        order:
                                          type: string
                                        disabled:
                                          type: string
                                        populationType:
                                          type: string
  Copy TDM Globals.in.LU_ROOT_TABLE:
    type: array
    items:
      type: object
      properties:
        table_name:
          type: string
        column_name:
          type: string
        population:
          type: string
        id:
          type: string
  Merge with Original XML.out.map:
    type: object
    properties:
      Name:
        type: object
        properties:
          _value:
            type: string
      RootView:
        type: object
        properties:
          _value:
            type: string
      LuLazyDataUpdate:
        type: object
        properties:
          _attributes:
            type: object
            properties:
              syncMethod:
                type: string
              performEvery:
                type: string
      EventsList:
        type: object
        properties: {
          }
      IidFinderProp:
        type: object
        properties:
          _value:
            type: object
            properties:
              NumberOfPartitions:
                type: object
                properties:
                  _value:
                    type: string
              NumberOfJobs:
                type: object
                properties:
                  _value:
                    type: string
      Tables:
        type: object
        properties:
          _value:
            type: object
            properties:
              Table:
                type: array
                items:
                  type: object
                  properties:
                    _value:
                      type: string
      TablesProperties:
        type: object
        properties:
          _value:
            type: object
            properties:
              TableProperties:
                type: array
                items:
                  type: object
                  properties:
                    _attributes:
                      type: object
                      properties:
                        name:
                          type: string
                    _value:
                      type: object
                      properties:
                        Populations:
                          type: object
                          properties:
                            _value:
                              type: object
                              properties:
                                Population:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        order:
                                          type: string
                                        disabled:
                                          type: string
                                        populationType:
                                          type: string
      EnrichmentsOrderList:
        type: object
        properties: {
          }
      ReferencesList:
        type: object
        properties: {
          }
      Relations:
        type: object
        properties: {
          }
      DatabaseRelations:
        type: object
        properties:
          _value:
            type: object
            properties:
              Relation:
                type: array
                items:
                  type: object
                  properties:
                    _value:
                      type: object
                      properties:
                        From:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                tableType:
                                  type: string
                                table:
                                  type: string
                                column:
                                  type: string
                                columnId:
                                  type: string
                        To:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                tableType:
                                  type: string
                                table:
                                  type: string
                                populationObjectName:
                                  type: string
                                column:
                                  type: string
                                columnId:
                                  type: string
      PreVCsSqlScript:
        type: object
        properties: {
          }
      PostVCsSqlScript:
        type: object
        properties: {
          }
      Indexes:
        type: object
        properties: {
          }
      LudbProperties:
        type: object
        properties: {
          }
      DiagramGraph:
        type: object
        properties:
          _value:
            type: object
            properties:
              Graph:
                type: object
                properties:
                  _attributes:
                    type: object
                    properties:
                      version:
                        type: string
                      name:
                        type: string
                  _value:
                    type: object
                    properties:
                      Node:
                        type: array
                        items:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                pos:
                                  type: string
                                size:
                                  type: string
                                listGroupSize:
                                  type: string
                                viewType:
                                  type: string
  Const1.in.value:
    type: array
    items:
      type: object
      properties:
        table_name:
          type: string
        column_name:
          type: string
        active:
          type: boolean
        population: {
          }
  Const1.out.value:
    type: array
    items:
      type: object
      properties:
        table_name:
          type: string
        column_name:
          type: string
        active:
          type: boolean
        population: {
          }
  Add back version tag.in.newXML:
    type: object
    properties:
      Name:
        type: object
        properties:
          _value:
            type: string
      RootView:
        type: object
        properties:
          _value:
            type: string
      LuLazyDataUpdate:
        type: object
        properties:
          _attributes:
            type: object
            properties:
              syncMethod:
                type: string
              performEvery:
                type: string
      EventsList:
        type: object
        properties: {
          }
      IidFinderProp:
        type: object
        properties:
          _value:
            type: object
            properties:
              NumberOfPartitions:
                type: object
                properties:
                  _value:
                    type: string
              NumberOfJobs:
                type: object
                properties:
                  _value:
                    type: string
      Tables:
        type: object
        properties:
          _value:
            type: object
            properties:
              Table:
                type: array
                items:
                  type: object
                  properties:
                    _value:
                      type: string
      TablesProperties:
        type: object
        properties:
          _value:
            type: object
            properties:
              TableProperties:
                type: array
                items:
                  type: object
                  properties:
                    _attributes:
                      type: object
                      properties:
                        name:
                          type: string
                    _value:
                      type: object
                      properties:
                        Populations:
                          type: object
                          properties:
                            _value:
                              type: object
                              properties:
                                Population:
                                  type: object
                                  properties:
                                    _attributes:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        order:
                                          type: string
                                        disabled:
                                          type: string
                                        populationType:
                                          type: string
      EnrichmentsOrderList:
        type: object
        properties: {
          }
      ReferencesList:
        type: object
        properties: {
          }
      Relations:
        type: object
        properties: {
          }
      DatabaseRelations:
        type: object
        properties:
          _value:
            type: object
            properties:
              Relation:
                type: array
                items:
                  type: object
                  properties:
                    _value:
                      type: object
                      properties:
                        From:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                tableType:
                                  type: string
                                table:
                                  type: string
                                column:
                                  type: string
                                columnId:
                                  type: string
                        To:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                tableType:
                                  type: string
                                table:
                                  type: string
                                populationObjectName:
                                  type: string
                                column:
                                  type: string
      PreVCsSqlScript:
        type: object
        properties: {
          }
      PostVCsSqlScript:
        type: object
        properties: {
          }
      Indexes:
        type: object
        properties: {
          }
      LudbProperties:
        type: object
        properties: {
          }
      DiagramGraph:
        type: object
        properties:
          _value:
            type: object
            properties:
              Graph:
                type: object
                properties:
                  _attributes:
                    type: object
                    properties:
                      version:
                        type: string
                      name:
                        type: string
                  _value:
                    type: object
                    properties:
                      Node:
                        type: array
                        items:
                          type: object
                          properties:
                            _attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                pos:
                                  type: string
                                size:
                                  type: string
                                listGroupSize:
                                  type: string
                                viewType:
                                  type: string
  Add back version tag.in.vdbAttr:
    type: object
    properties:
      version:
        type: string
  Add back version tag.out.result:
    type: object
    properties:
      VirtualDB:
        type: object
        properties:
          _attributes:
            type: object
            properties:
              version:
                type: string
          _value:
            type: object
            properties:
              Name:
                type: object
                properties:
                  _value:
                    type: string
              RootView:
                type: object
                properties:
                  _value:
                    type: string
              LuLazyDataUpdate:
                type: object
                properties:
                  _attributes:
                    type: object
                    properties:
                      syncMethod:
                        type: string
                      performEvery:
                        type: string
              EventsList:
                type: object
                properties: {
                  }
              IidFinderProp:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      NumberOfPartitions:
                        type: object
                        properties:
                          _value:
                            type: string
                      NumberOfJobs:
                        type: object
                        properties:
                          _value:
                            type: string
              Tables:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      Table:
                        type: array
                        items:
                          type: object
                          properties:
                            _value:
                              type: string
              TablesProperties:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      TableProperties:
                        type: object
                        properties:
                          _attributes:
                            type: object
                            properties:
                              name:
                                type: string
                          _value:
                            type: object
                            properties:
                              Populations:
                                type: object
                                properties:
                                  _value:
                                    type: object
                                    properties:
                                      Population:
                                        type: object
                                        properties:
                                          _attributes:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                              order:
                                                type: string
                                              disabled:
                                                type: string
                                              populationType:
                                                type: string
              EnrichmentsOrderList:
                type: object
                properties: {
                  }
              ReferencesList:
                type: object
                properties: {
                  }
              Relations:
                type: object
                properties: {
                  }
              DatabaseRelations:
                type: object
                properties: {
                  }
              PreVCsSqlScript:
                type: object
                properties: {
                  }
              PostVCsSqlScript:
                type: object
                properties: {
                  }
              Indexes:
                type: object
                properties: {
                  }
              LudbProperties:
                type: object
                properties: {
                  }
              DiagramGraph:
                type: object
                properties:
                  _value:
                    type: object
                    properties:
                      Graph:
                        type: object
                        properties:
                          _attributes:
                            type: object
                            properties:
                              version:
                                type: string
                              name:
                                type: string
                          _value:
                            type: object
                            properties:
                              Node:
                                type: object
                                properties:
                                  _attributes:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      pos:
                                        type: string
                                      size:
                                        type: string
                                      listGroupSize:
                                        type: string
                                      viewType:
                                        type: string
