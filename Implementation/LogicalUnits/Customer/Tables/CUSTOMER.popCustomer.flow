{
    "levels": [
        {
            "stages": [
                {
                    "name": "Get TDM_SYNC_SOURCE_DATA",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Get Variable TDM_SYNC_SOURCE_DATA",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "TDM_SYNC_SOURCE_DATA",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get Delete Only Task Indicator",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "TDM_DELETE_ONLY_TASK",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check Variable And Delete Root Table",
                    "dependsOnList": [
                        "Get TDM_SYNC_SOURCE_DATA"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Check TDM_SYNC_SOURCE_DATA",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "true"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Delete Root Table",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "delete from Customer.customer"
                                    },
                                    {
                                        "name": "table",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Instance should not be synced",
                    "dependsOnList": [
                        "Get TDM_SYNC_SOURCE_DATA"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "Check if first Sync",
                            "actorType": {
                                "parentType": "LuFunction",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "const": "fnIsFirstSync"
                                    },
                                    {
                                        "const": "Customer",
                                        "name": "luType",
                                        "schema": {}
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "firstSyncInd",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Not1",
                            "actorType": {
                                "parentType": "Not",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Input",
                    "dependsOnList": [
                        "Check Variable And Delete Root Table"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "PopulationArgs",
                            "actorType": {
                                "parentType": "PopulationArgs",
                                "readOnly": true,
                                "inputs": [
                                    {
                                        "name": "customer_id",
                                        "schema": {}
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "parent_rows",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customer_id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Init Instance As Not Found",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.instanceFound = false;"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Get Tables Fields",
                            "actorType": {
                                "parentType": "LuFunction",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "const": "getLuTableColumns"
                                    },
                                    {
                                        "const": "customer",
                                        "name": "table",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "luName",
                                        "schema": {},
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "res",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "if First Sync Throw Exception",
                    "dependsOnList": [
                        "Instance should not be synced"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "First Sync Is True and Not A Delete Only Task",
                            "condition": "result",
                            "actorType": {
                                "parentType": "And",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Throw Exception",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "throw \"The instance does not exist in Fabric and sync from source is off\""
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get the Synthetic Global ",
                    "dependsOnList": [
                        "Input"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "FabricSetRead1",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "CREATE_SYNTHETIC_ENTITY"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Move the parent row to array",
                            "actorType": {
                                "parentType": "ArrayBuilder",
                                "inputs": [],
                                "outputs": [
                                    {
                                        "name": "array",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customer_id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Stage 2",
                    "dependsOnList": [
                        "if First Sync Throw Exception"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get data from Source",
                    "dependsOnList": [
                        "Get the Synthetic Global "
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "NotEquals1",
                            "condition": "result",
                            "actorType": {
                                "parentType": "NotEquals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "true"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Data Manufacturing",
                    "dependsOnList": [
                        "Get the Synthetic Global "
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": []
                },
                {
                    "name": "Stage 3",
                    "dependsOnList": [
                        "Stage 2"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Source",
                    "dependsOnList": [
                        "Get data from Source"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Query",
                            "actorType": {
                                "parentType": "SourceDbQuery",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "CRM_DB"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select * from customer"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customer_id": {
                                                        "type": "integer"
                                                    },
                                                    "ssn": {
                                                        "type": "string"
                                                    },
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Synthetic Creation Flow",
                    "dependsOnList": [
                        "Data Manufacturing"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "InnerFlow1",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "creSyntheticCustomerTableRec"
                                    },
                                    {
                                        "name": "customer_id",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "customerRecord",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "customer_id": {
                                                        "type": "string"
                                                    },
                                                    "ssn": {
                                                        "type": "string"
                                                    },
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing",
                    "dependsOnList": [
                        "Stage 3"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Set instance As Found",
                    "dependsOnList": [
                        "Source",
                        "Synthetic Creation Flow"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Instance Is Found In Source",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.instanceFound = true;"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 1",
                    "dependsOnList": [
                        "Do Nothing"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "LU Table",
                    "dependsOnList": [
                        "Set instance As Found"
                    ],
                    "isLast": 1,
                    "actors": [
                        {
                            "name": "Root Table",
                            "actorType": {
                                "parentType": "DbLoad",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "schema",
                                        "const": null
                                    },
                                    {
                                        "name": "table",
                                        "const": "customer"
                                    },
                                    {
                                        "name": "fields",
                                        "const": null
                                    },
                                    {
                                        "name": "keys",
                                        "const": [
                                            "customer_id"
                                        ]
                                    },
                                    {
                                        "name": "dialect",
                                        "const": "sqlite"
                                    },
                                    {
                                        "name": "customer_id",
                                        "schema": {}
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 2",
                    "dependsOnList": [
                        "Do Nothing 1"
                    ],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 1",
                    "dependsOnList": [
                        "LU Table"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "NotEquals2",
                            "condition": "result",
                            "actorType": {
                                "parentType": "NotEquals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "true"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Stage 4",
                    "dependsOnList": [
                        "Do Nothing 2"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Post Load",
                    "dependsOnList": [
                        "Stage 1"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Check if Instance Was Not Found In Source",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "if (flowArgs.instanceFound == false) {\r\n    throw \"Instance \" + iid + \" is not found in the Source\"\r\n}",
                                            "script": "if (flowArgs.instanceFound == false) {\n  throw \"Instance \" + iid + \" is not found in the Source\";\n}"
                                        }
                                    },
                                    {
                                        "name": "iid",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 3",
                    "dependsOnList": [
                        "Stage 4"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Get Variable TDM_SYNC_SOURCE_DATA",
                "name": "result"
            },
            "rightPort": {
                "actor": "Check TDM_SYNC_SOURCE_DATA",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Get Delete Only Task Indicator",
                "name": "result"
            },
            "rightPort": {
                "actor": "Not1",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "Check if first Sync",
                "name": "firstSyncInd"
            },
            "rightPort": {
                "actor": "First Sync Is True and Not A Delete Only Task",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Not1",
                "name": "result"
            },
            "rightPort": {
                "actor": "First Sync Is True and Not A Delete Only Task",
                "name": "b"
            }
        },
        {
            "leftPort": {
                "actor": "PopulationArgs",
                "name": "iid"
            },
            "rightPort": {
                "actor": "Check if Instance Was Not Found In Source",
                "name": "iid"
            }
        },
        {
            "leftPort": {
                "actor": "PopulationArgs",
                "name": "parent_rows"
            },
            "rightPort": {
                "actor": "Move the parent row to array",
                "name": "input"
            }
        },
        {
            "leftPort": {
                "actor": "Get Tables Fields",
                "name": "res"
            },
            "rightPort": {
                "actor": "Root Table",
                "name": "fields"
            }
        },
        {
            "leftPort": {
                "actor": "FabricSetRead1",
                "name": "result"
            },
            "rightPort": {
                "actor": "NotEquals1",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "FabricSetRead1",
                "name": "result"
            },
            "rightPort": {
                "actor": "NotEquals2",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Move the parent row to array",
                "name": "array"
            },
            "rightPort": {
                "actor": "Query",
                "name": "parent_rows"
            }
        },
        {
            "leftPort": {
                "actor": "Move the parent row to array",
                "name": "array"
            },
            "rightPort": {
                "actor": "InnerFlow1",
                "name": "customer_id"
            },
            "path": [
                "customer_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Query",
                "name": "result"
            },
            "rightPort": {
                "actor": "Root Table",
                "name": "params"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "InnerFlow1",
                "name": "customerRecord"
            },
            "rightPort": {
                "actor": "Root Table",
                "name": "params"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "table"
            },
            "rightPort": {
                "actor": "Delete Root Table",
                "name": "table"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "customer_id"
            },
            "rightPort": {
                "actor": "PopulationArgs",
                "name": "customer_id"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "schema"
            },
            "rightPort": {
                "actor": "Root Table",
                "name": "schema"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "table"
            },
            "rightPort": {
                "actor": "Root Table",
                "name": "table"
            }
        }
    ]
}