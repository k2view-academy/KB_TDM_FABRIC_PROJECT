{
    "levels": [
        {
            "stages": [
                {
                    "name": "Pre Load Entity",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Initation Error Handle",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsWithFailed"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Initiate TDM Load",
                            "actorType": {
                                "parentType": "InitiateTDMLoad_Actor",
                                "inputs": [
                                    {
                                        "name": "deleteBeforeLoad",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "luName",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "insertToTarget",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "targetEnv",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "sourceEnv",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "iid",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "syncMode",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Delete Entity Indicator",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Get Delete Before Load",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "TDM_DELETE_BEFORE_LOAD",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check If Delete Entity",
                    "dependsOnList": [
                        "Get Delete Entity Indicator"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Equals2",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "true"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "No Data Deletion",
                    "dependsOnList": [
                        "Get Delete Entity Indicator"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Delete Before Load",
                    "dependsOnList": [
                        "Check If Delete Entity"
                    ],
                    "isLast": 0,
                    "isTransactional": true,
                    "remark": "Delete Flow to delete all the Entity data from Target",
                    "actors": [
                        {
                            "name": "Delete Error Handler",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsWithFailed"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Delete Target Tables",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "DeleteAllTables"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing ",
                    "dependsOnList": [
                        "No Data Deletion"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Insert To Target Indicator",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Get Insert to Target Indicator",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "TDM_INSERT_TO_TARGET",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Should Entity Be Loaded Into Target",
                    "dependsOnList": [
                        "Get Insert To Target Indicator"
                    ],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Equals1",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "true"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "No Data Loading",
                    "dependsOnList": [
                        "Get Insert To Target Indicator"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Load Tables",
                    "dependsOnList": [
                        "Should Entity Be Loaded Into Target"
                    ],
                    "isLast": 0,
                    "isTransactional": true,
                    "remark": "Load tables into target.\nThis flow will first check if data should be loaded to target tables or not",
                    "actors": [
                        {
                            "name": "Load Error Handler",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsWithFailed"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Load All Tables",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "LoadAllTables"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                },
                {
                    "name": "Do Nothing 2",
                    "dependsOnList": [
                        "No Data Loading"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Post Load Entity",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "remark": "Activities to be done after the handling of the entity was done:\n1. Add entity to TDM_TASK_EXECUTION_ETITIES TDMDB Table\n2. Add entity's Sequence Mappings to TDM_SEQ_MAPPING TDMDB Table",
                    "actors": [
                        {
                            "name": "Populate Task Execution Entities",
                            "actorType": {
                                "parentType": "PopulateTaskExecutionEntities_Actor",
                                "inputs": [
                                    {
                                        "name": "idType",
                                        "const": "ENTITY"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Populate TDM Sequence Mapping",
                            "actorType": {
                                "parentType": "PopulateTdmSeqMapping_Actor",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 2",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Logger1",
                            "actorType": {
                                "parentType": "Logger",
                                "inputs": [
                                    {
                                        "name": "message",
                                        "const": "Finished loading Entity ${luType}.${iid}."
                                    },
                                    {
                                        "name": "level",
                                        "const": "info"
                                    },
                                    {
                                        "name": "luType",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "iid",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Get Delete Before Load",
                "name": "result"
            },
            "rightPort": {
                "actor": "Equals2",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Get Insert to Target Indicator",
                "name": "result"
            },
            "rightPort": {
                "actor": "Equals1",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "globals"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "globals"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "deleteBeforeLoad"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "deleteBeforeLoad"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "luName"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "luName"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "insertToTarget"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "insertToTarget"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "targetEnv"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "targetEnv"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "sourceEnv"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "sourceEnv"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "iid"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "iid"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "syncMode"
            },
            "rightPort": {
                "actor": "Initiate TDM Load",
                "name": "syncMode"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "luName"
            },
            "rightPort": {
                "actor": "Logger1",
                "name": "luType"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "iid"
            },
            "rightPort": {
                "actor": "Logger1",
                "name": "iid"
            }
        }
    ]
}