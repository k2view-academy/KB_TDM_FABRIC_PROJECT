tags: Create
stages:
  Stage 1:
    actors:
      is_first_deploy:
        parent: Const
        remark: A boolean representing if this is the first deploy
        in:
          value:
            const: null
            external: is_first_deploy
            schema: boolean
        out:
          value:
            schema: boolean
  Stage 2:
    dependsOn: Stage 1
    actors:
      Equals1:
        parent: Equals
        condition: result
        in:
          a:
            link: is_first_deploy/value
            schema: boolean
          b:
            const: true
            schema: boolean
    split: '--------------------'
  Stage 3:
    else: true
    transactional: false
    dependsOn: Stage 1
  Get List Of Roles:
    dependsOn: Stage 2
    actors:
      DbCommand:
        parent: DbCommand
        in:
          interface:
            const: fabric
          sql:
            const: List Roles
        out:
          result:
            schema: '#ref'
    split: '--------------------'
  Stage 4:
    transactional: false
    dependsOn: Stage 3
  Check if role includes _k2v_user:
    dependsOn: Get List Of Roles
    actors:
      _k2v_user:
        parent: StringPos
        in:
          substring:
            const: _k2v_
          string:
            link:
              path: DbCommand/result/name
              iterate: Iterate
    split: '--------------------'
  Stage 8:
    transactional: false
    dependsOn: Stage 4
  'True':
    dependsOn: Check if role includes _k2v_user
    actors:
      EqualsIgnoreCase:
        parent: EqualsIgnoreCase
        condition: result
        in:
          b:
            const: 'true'
            schema: string
          a:
            link: _k2v_user/found
    split: '--------------------'
  'False':
    else: true
    transactional: false
    dependsOn: Check if role includes _k2v_user
    split: '--------------------'
  Stage 9:
    transactional: false
    dependsOn: Stage 8
  Insert Statements To TDMDB Tables:
    dependsOn: 'True'
    actors:
      DbCommand1:
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: "INSERT INTO public.permission_groups_mapping(\n\tdescription,\
              \ fabric_role, permission_group, created_by, updated_by, creation_date,\
              \ update_date)\n\tVALUES ('Initial mapping for tester user',${k2v_user}\
              \ ,'tester', 'admin', 'admin', NOW(), NOW()) ON CONFLICT DO NOTHING;\n"
          k2v_user:
            link: DbCommand/result/name
            schema: string
            mandatory: false
    split: '--------------------'
  Stage 5:
    transactional: false
    dependsOn: 'False'
    split: '--------------------'
  Stage 10:
    transactional: false
    dependsOn: Stage 9
  Execute TDM Insert Sql Statements:
    dependsOn: Insert Statements To TDMDB Tables
    actors:
      Get  SQL Resource File To insert data to TDM tables:
        parent: LuFunction
        in:
          functionName:
            const: loadFromLUResource
          path:
            const: TDM/DEMO/tdm_insert.sql
            schema: string
            mandatory: false
        out:
          result:
            schema: blob
    split: '--------------------'
  Stage 6:
    transactional: false
    dependsOn: Stage 5
    split: '--------------------'
  Stage 11:
    transactional: false
    dependsOn: Stage 10
  Insert Statements:
    last: 1
    dependsOn: Execute TDM Insert Sql Statements
    actors:
      Create Error Handler:
        parent: ErrorHandler
        error: result
        in:
          config:
            const:
            - exceptionKey: com.k2view.fabric.common.io.basic.exception.StandardSqlException
              conditions:
                standardType: UNIQUE_CONSTRAINT
              actions:
                suppress: false
                log: true
                flowName: ''
      Insert To TDM DB:
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: null
            link: Get  SQL Resource File To insert data to TDM tables/result
    split: '--------------------'
  Stage 7:
    last: 1
    transactional: false
    dependsOn: Stage 6
    split: '--------------------'
  Stage 12:
    last: 1
    transactional: false
    dependsOn: Stage 11
schemas:
  DbCommand.out.result:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        security profiles:
          type: string
        description:
          type: string
