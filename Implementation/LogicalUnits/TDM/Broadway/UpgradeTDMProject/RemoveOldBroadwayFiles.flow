tags: TDM,UpgradeTDMProject
stages:
  Stage 1:
    actors:
      Get Project Folder:
        parent: SysEnv
        in:
          name:
            const: PROJECT_DIR
        out:
          value:
            schema: string
      Get Project Folder Interface:
        parent: InnerFlow
        in:
          flowName:
            const: GetProjectFolder
        out:
          PROJECT_FOLDER:
            schema: string
      Format Folder Name:
        parent: StringFormat
        in:
          format:
            const: SharedObjects/Broadway/TDM/TDMImplementorActors
  Stage 8:
    actors:
      Create Folder if it does not exist:
        parent: md
        in:
          interface:
            const: null
            link: Get Project Folder Interface/PROJECT_FOLDER
          path:
            link: Format Folder Name/string
      Old Locations:
        parent: ConstStrings
        in:
          strings:
            const:
            - Broadway
            - Broadway/TDM
            - Broadway/TDM/TDMTemplates
  Stage 5:
    actors:
      Source Folder:
        parent: Const
        in:
          value:
            const: null
            link:
              path: Old Locations/strings
              iterate: Iterate
            schema: string
        out:
          value:
            schema: string
      List Of Files and Locations to be Moved:
        parent: ConstTable
        in:
          table:
            const:
            - fileName: TDMFilterOutTargetTables.actor
              fileFolder: TDMImplementorActors
            - fileName: TDMTargetTablesNames.actor
              fileFolder: TDMImplementorActors
            - fileName: TDMSeqList.actor
              fileFolder: TDMImplementorActors
            - fileName: TDMSeqSrc2TrgMapping.actor
              fileFolder: TDMImplementorActors
            - fileName: CustomLogicFlows.actor
              fileFolder: TDMImplementorActors
            schema: '#ref'
        out:
          table:
            schema: '#ref'
  Stage 2:
    actors:
      Format File Old Location:
        parent: StringFormat
        height: 174
        in:
          format:
            const: SharedObjects/${subFolder}/${toBeMoved}
          subFolder:
            link: Source Folder/value
            schema: string
            mandatory: false
          toBeMoved:
            link:
              path: List Of Files and Locations to be Moved/table/fileName
              iterate: Iterate
            schema: string
            mandatory: false
      Format File New Location:
        parent: StringFormat
        in:
          format:
            const: SharedObjects/Broadway/TDM/${targetFolder}/${toBeMoved}
          targetFolder:
            link:
              path: List Of Files and Locations to be Moved/table/fileFolder
              iterate: Iterate
            schema: string
            mandatory: false
          toBeMoved:
            link:
              path: List Of Files and Locations to be Moved/table/fileName
              iterate: Iterate
            schema: string
            mandatory: false
  Stage 3:
    last: 1
    actors:
      Error Handler:
        parent: ErrorHandler
        error: result
        in:
          config:
            const:
            - exceptionKey: java.lang.Exception
              conditions:
                message: ''
              actions:
                suppress: true
                log: false
                flowName: ''
                number_of_retries: ''
                retry_interval: ''
      Move File:
        parent: mv
        height: 179
        in:
          interface:
            const: null
            link: Get Project Folder Interface/PROJECT_FOLDER
          from:
            link: Format File Old Location/string
          to:
            link: Format File New Location/string
  Stage 4:
    last: 1
  Stage 6:
    actors:
      List of Files to be Deleted:
        parent: ConstStrings
        in:
          strings:
            const:
            - GenerateDataSubset.flow
            - addNewGenerateTask.flow
            - Getk2SystemSchemaName.flow
            - createK2systemSchema.flow
            - ImportDataSubset.flow
            - getEntityList.flow
            - ImportFromGenerationJob.flow
            - prepareGenerationTask.flow
            - kubeApply.flow
            - kubeCreateTrainingTaskGPU.flow
            - kubeBuildMedoidInfraInit.flow
            - kubeDeleteJob.flow
            - kubeCreateGenerationTaskGPU.flow
            - kubeDeleteNamespace.flow
            - kubeCreateNamespace.flow
            - kubeGetJobStatus.flow
            - kubeCreatePVC.flow
            - kubeGetNamespaceJobNames.flow
            - kubeCreateSecret.flow
            - kubeGetNamespaces.flow
            - AIActiveSourceInterfacesCheck.flow
            - filterOutTDMTrainingTables.flow
            - AIActiveTargetInterfacesCheck.flow
            - getMappingAndSpecialColumns.flow
            - ExportDataSubset.flow
            - initAIInterfacesCheck.flow
            - TrainingCheckStatus.flow
            - prepareTrainingTask.flow
            - TrainingDataSubset.flow
            - trainingExcludedTables.flow
            - exportToTrainingJob.flow
            - CheckAndStopLoop.actor
            - buildTDMEid.flow
            - CheckIfCustomFlowIsDirect.flow
            - buildTDMEidForCustomLogic.flow
            - CustomLogicFlows.actor
            - buildTDMEidTemplate.flow
            - CustomLogicSql.flow
            - createLuExternalEntityListTable.actor
            - GetCustomLogicFlows.flow
            - createLuExternalEntityListTable.flow
            - InitRecordCount.actor
            - customLogicDirectFlowUtil.actor
            - SetSessionGlobals.flow
            - customLogicDirectFlowUtil.flow
            - TDMSetSessionGlobals.actor
            - getNYCustomers.flow
            - TDMSetSessionGlobals.flow
            - getScooterCustomers.flow
            - WaitForCustomLogicFlow.flow
            - insertToLuExternalEntityList.actor
            - buildTDMEid.actor
            - insertToLuExternalEntityList.flow
            - CheckIfFileExists.flow
            - TDMSeqMappingStore.flow
            - ConstDate.actor
            - buildPGDateTimeStringFormat.flow
            - ConstDateTime.actor
            - buildTdmApiJSON.flow
            - ConstTime.actor
            - getLUVariable.flow
            - CreateJson.flow
            - getLUVariable_Actor.actor
            - EmptyBlob.actor
            - getTDMSeparators.actor
            - getTDMSeparators.flow
            - GetLUId.flow
            - getTDMSeparatorsFromTDMDB.flow
            - GetProjectFolder.flow
            - postTaskExePrintToLog.flow
            - GetSyncSourceDataIndicator.actor
            - setSourceEnv.flow
            - GetSyncSourceDataIndicator.flow
            - setSourceEnv_Actor.actor
            - ListEditorInterfaces.flow
            - setTargetEntityId.flow
            - OverrideTemplatesWithCatalogTemplates.flow
            - setTargetEntityId_Actor.actor
            - SeqMappingStore.actor
            - setTargetEnv.flow
            - SplitIIDAndCloneNumber.flow
            - setTargetEnv_Actor.actor
            - SplitIIDAndCloneNumber_Actor.actor
            - upgradeTDMProject.flow
            - StatsLoader.actor
            - ConstDistribution.actor
            - GenerateDataDefaultFieldTypeActors.actor
            - GenerateDataIIDGenerator.actor
            - GenerateEnrichmentChildLink.flow
            - GenerateIIDs.actor
            - GenerateIIDs.flow
            - GenerateIIDsForRoleBase.flow
            - GenerateIIDs_Actor.actor
            - GetDMParamsByTaskId.flow
            - GetDMParamsFromTable.actor
            - GetDMParamsFromTable.flow
            - GetGenerateParamsByTaskId.flow
            - GetGeneratedSubsetEntities.flow
            - GetIIDSequence.flow
            - InsertIntoGenDataParamMappings.flow
            - LoadGDParamsFromSessionToFlowGlobals.flow
            - LoadGDParamsFromTableIntoSession.flow
            - PopulationArgs.actor
            - RandomStringRegex.actor
            - ReturnGeneratedIIDs.actor
            - ReturnGeneratedIIDs.flow
            - SourceDbQuery.actor
            - TDMGenerateOrchestrator.flow
            - UUID_GEN.flow
            - WaitForGenerateFlow.flow
            - getParentLUI.flow
            - InitiateTDMLoad.flow
            - initaiteTaskExecutionEntities.flow
            - InitiateTDMLoad_Actor.actor
            - UpdatePostProcessList.flow
            - convertTranslationToMTable.flow
            - childLinkLookup.flow
            - executionProcessLookup.flow
            - convertChildLink.flow
            - luParamsLookup.flow
            - convertLuParams.flow
            - postProcessLookup.flow
            - convertLuTranslations.flow
            - refListLookup.flow
            - TDMExtractOrchestrator.flow
            - TDMOrchestrator.flow
            - TDMGenerateOrchestrator.flow
            - TDMReserveOrchestrator.flow
            - RefTableToTmpTable.flow
            - TmpTableToRefTable.flow
            - UpgradeRefTables.flow
            - RefTableToTmpTable.flow
            - TmpTableToRefTable.flow
            - UpgradeRefTables.flow
            - CheckIfReserved.flow
            - CheckReserveAndLoadToEntityList.actor
            - CheckReserveAndLoadToEntityList.flow
            - GetNewEndDate.actor
            - GetNewEndDate.flow
            - HandleEntityReservationAtEnd.actor
            - HandleEntityReservationAtEnd.flow
            - HandleEntityReservationAtStart.actor
            - HandleEntityReservationAtStart.flow
            - ReleaseReservedEntity.actor
            - ReleaseReservedEntity.flow
            - ReserveEntity.actor
            - ReserveEntity.flow
            - TDMReserveOrchestrator.flow
            - UpdateReserveEntitiesTableForAdminOnwer.flow
            - UpdateReserveEntitiesTableForTester.flow
            - CheckIfRootTableAndField.actor
            - CheckIfRootTableAndField.flow
            - PopulateAITablesWithFailed.flow
            - PopulateTDMAIGenIIDMapping.flow
            - PopulateTDMAIGenIIDMapping_Actor.actor
            - PopulateTableErrors.actor
            - PopulateTableErrors.flow
            - PopulateTableErrorsWithFailed.flow
            - PopulateTableErrorsWithReject.flow
            - PopulateTableErrors_Actor.actor
            - PopulateTaskExecutionEntities.flow
            - PopulateTaskExecutionEntities_Actor.actor
            - PopulateTdmSeqMapping.flow
            - PopulateTdmSeqMappingTable.flow
            - PopulateTdmSeqMapping_Actor.actor
            - UpdateTaskExecutionEntitiesRoot.flow
            - getLUTableCoulumnID.flow
            - checkPreRequisite.flow
            - getRootTableIID.flow
            - getTableKeys.flow
            - copyTDMTables.flow
            - getTableLinks.flow
            - copyTDMTranslations.flow
            - updateDeleteFlows.flow
            - copyTarTablesToLU.flow
            - updateLUSchema.flow
            - createLuTargetTables.flow
            - updateLoadRootTableFlow.flow
            - createOrchestratorLuFlow.flow
            - updateRootPopulationTAR.flow
            - createRootTablePopulation.flow
            - updateSrcTablesSyncPolicy.flow
            - AddDeleteTablesToSchema.flow
            - createDeleteTableFromTargetFlow.flow
            - BuildDeleteTableFieldData.flow
            - createDeleteTablesAndPopulations.flow
            - CheckIfDeleteOnlyTask.actor
            - createDeleteTablesFiles.flow
            - CheckIfDeleteOnlyTask.flow
            - createFlowsFromTemplates.flow
            - CheckIfFlowExists.actor
            - createFolderForFlows.flow
            - CheckIfFlowExists.flow
            - createGenerateDataPopulations.flow
            - CheckIfSequenceFlowExists.actor
            - createGenerateDataTableFlows.flow
            - CheckIfSequenceFlowExists.flow
            - createGenerateDataTablePopulation.flow
            - CheckIfTableExists.flow
            - createGeneratorFlowName.flow
            - SetTargetTableName.actor
            - createLoadAllTablesFlow.actor
            - SetTargetTableName.flow
            - createLoadAllTablesFlow.flow
            - createLoadTableFlows.actor
            - createLoadTableFlows.flow
            - createLoadTableToTargetFlow.flow
            - createSeqFlowsOnlyFromTemplates.actor
            - buildDeleteTablesTemplateData.flow
            - createSeqFlowsOnlyFromTemplates.flow
            - checkIfFieldSequential.actor
            - createSequenceActors.actor
            - checkIfFieldSequential.flow
            - createSequenceActors.flow
            - checkMainTableAndSequentialIID.actor
            - createSequenceFlows.actor
            - checkMainTableAndSequentialIID.flow
            - createSequenceFlows.flow
            - createAllFromTemplates.flow
            - filterOutGenertors.flow
            - createDeleteAllTablesFlow.actor
            - filterOutTDMTables.actor
            - createDeleteAllTablesFlow.flow
            - filterOutTDMTables.flow
            - createDeleteTableFlows.actor
            - getTableSequenceMapping.actor
            - createDeleteTableFlows.flow
            - getTableSequenceMapping.flow
  Stage 10:
    actors:
      Format File/Directory Name:
        parent: StringFormat
        height: 174
        in:
          format:
            const: ${projectFolder}/Implementation/SharedObjects/Broadway/${toBeDeleted}
          projectFolder:
            link: Get Project Folder/value
            schema: string
            mandatory: false
          toBeDeleted:
            link:
              path: List of Files to be Deleted/strings
              iterate: Iterate
            schema: string
            mandatory: false
  Stage 7:
    actors:
      Delete File or Folder:
        parent: LuFunction
        in:
          functionName:
            const: deleteFile
          fileName:
            link: Format File%2FDirectory Name/string
            schema: string
            mandatory: false
schemas:
  List Of Files and Locations to be Moved.in.table:
    type: array
    items:
      type: object
      properties:
        fileName:
          type: string
        fileFolder:
          type: string
  List Of Files and Locations to be Moved.out.table:
    type: array
    items:
      type: object
      properties:
        fileName:
          type: string
        fileFolder:
          type: string
