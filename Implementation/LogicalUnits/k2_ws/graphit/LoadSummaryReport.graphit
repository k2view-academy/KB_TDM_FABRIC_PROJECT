{
  "name": "rootNode",
  "serializerSettings": [
    {
      "set": "nice",
      "value": "true"
    }
  ],
  "children": [
    {
      "name": "result",
      "sessionProvider": "fabric",
      "collapsed": true,
      "children": [
        {
          "name": "General Info",
          "type": "sql",
          "code": "Select T.TASK_NAME AS task_name,\n  T.TASK_ID AS task_id,\n  T.TASK_EXECUTION_ID AS task_execution_id,\n  T.TASK_CREATED_BY As created_by ,\n  L.TASK_EXECUTED_BY As executed_by ,\n  MIN(L.START_EXECUTION_TIME) AS start_execution ,\n  MAX(L.END_EXECUTION_TIME) AS end_execution ,\n  Case When (Exists(Select 1 From task_execution_list\n    Where task_execution_id = L.task_execution_id And execution_status =\n      'failed')) Then 'failed' \n  When (Exists(Select 1 From task_execution_list\n    Where task_execution_id = L.task_execution_id And execution_status =\n      'stopped')) Then 'stopped' \n  Else 'completed' End AS execution_status,\n  T.SOURCE_ENV AS source_env,\n  T.TARGET_ENV AS target_env,\n  T.BE_NAME AS be_name,\n  T.TASK_TYPE AS task_type,\n  Case When T.selection_method = 'ALL' Then 'ALL'\n    When T.selection_method = 'L' Then 'Entity List'\n    When T.selection_method = 'R' Then 'Randon Selection'\n    When T.selection_method = 'REF' Then 'Reference only'\n    When T.selection_method = 'CLONE' Then 'Entity Clone'\n    When T.selection_method = 'C' Then 'Custom Logic'\n    When T.selection_method = 'GEN' Then 'Generate Synthetic' Else 'Parameters'\n  End As selection_method,\n  T.TASK_SYNC_MODE AS task_sync_mode,\n  T.ENV_SYNC_MODE AS env_sync_mode,\n  T.OPERATION_MODE AS operation_mode,\n  Case When T.selection_method = 'S' Then 'true' Else T.REPLACE_SEQUENCES\n  End As replace_sequences,\n  T.VERSION_IND AS version_ind,\n  T.SELECTED_VERSION_TASK_NAME AS selected_version_task_name,\n  T.SELECTED_VERSION_DATETIME AS selected_version_datetime,\n  T.SELECTED_REF_VERSION_TASK_NAME AS selected_REF_version_task_name,\n  T.SELECTED_REF_VERSION_DATETIME AS selected_REF_version_datetime,\n  T.SCHEDULER As scheduling_parameters,\n  T.SCHEDULING_END_DATE As schedule_expiration_date,\n  O.OVERRIDE_PARAMETERS AS override_parameters,\n  T.RESERVE_IND AS reserve_ind,\n  T.RESERVE_RETENTION_PERIOD_TYPE AS reserve_retention_period_type,\n  T.RESERVE_RETENTION_PERIOD_VALUE AS reserve_retention_period_value\nFrom TDM.TASKS T\n  LEFT JOIN TDM.TASK_EXECUTION_LIST L ON T.TASK_EXECUTION_ID = L.TASK_EXECUTION_ID\n  LEFT JOIN TDM.TASK_EXECUTION_OVERRIDE_ATTRS O ON T.TASK_EXECUTION_ID = O.TASK_EXECUTION_ID",
          "sessionProvider": "fabric"
        },
        {
          "name": "Source Environment",
          "collapsed": true,
          "children": [
            {
              "name": "Environment Name",
              "type": "sql",
              "code": "select distinct source_env as Name from TDM.tasks",
              "sessionProvider": "fabric"
            },
            {
              "name": "Source Environment Products",
              "type": "sql",
              "code": "select distinct product_name, source_product_version\nfrom TDM.task_execution_list\nWHERE product_name IS NOT NULL AND source_product_version IS NOT NULL;"
            }
          ]
        },
        {
          "name": "Target Environment",
          "collapsed": true,
          "children": [
            {
              "name": "Environment Name",
              "type": "sql",
              "code": "select distinct target_env as Name from TDM.tasks",
              "sessionProvider": "fabric"
            },
            {
              "name": "Target Environment Products",
              "type": "sql",
              "code": "select distinct product_name, target_product_version\nfrom task_execution_list\nWHERE product_name IS NOT NULL AND target_product_version IS NOT NULL;"
            }
          ]
        },
        {
          "name": "Task Parameters",
          "type": "sql",
          "code": "Select TASKS.SELECTION_METHOD as selection_method\nFrom TDM.TASKS",
          "sessionProvider": "fabric",
          "one": true,
          "collapsed": true,
          "children": [
            {
              "name": "Selection Method",
              "type": "function",
              "code": "var sm = selection_method; \nsm;",
              "children": [
                {
                  "name": "Generate Selection Method",
                  "type": "condition",
                  "code": "sm == 'GENERATE' ",
                  "children": [
                    {
                      "name": "Generate Params",
                      "type": "sql",
                      "code": "select PARAM_NAME,PARAM_VALUE from TDM.TDM_GENERATE_TASK_FIELD_MAPPINGS;",
                      "sessionProvider": "fabric",
                      "children": [
                        {
                          "name": "param_name",
                          "type": "variable",
                          "code": "PARAM_NAME"
                        },
                        {
                          "name": "param_value",
                          "type": "variable",
                          "code": "PARAM_VALUE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Custom Logic Selection Method",
                  "type": "condition",
                  "code": "sm == 'C' ",
                  "collapsed": true,
                  "children": [
                    {
                      "name": "custom logic",
                      "type": "sql",
                      "code": "Select parameters as params from TDM.tasks;",
                      "sessionProvider": "fabric",
                      "one": true,
                      "collapsed": true,
                      "children": [
                        {
                          "name": "param_name",
                          "type": "function",
                          "code": "var parsedData = JSON.parse(params);\nvar par = parsedData.inputs;\nvar result={};\nfor (var p in par){ \n\tresult[p] = par[p].name;\n}\nresult;",
                          "one": true
                        },
                        {
                          "name": "param_value",
                          "type": "function",
                          "code": "var parsedData = JSON.parse(params);\nvar par = parsedData.inputs;\nvar result={};\nfor (var p in par){ \n\tresult[p] = par[p].value;\n}\nresult;",
                          "one": true
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Parameters Selection Method",
                  "type": "condition",
                  "code": "sm == 'P' || sm == 'PR'",
                  "collapsed": true,
                  "children": [
                    {
                      "name": "parameters",
                      "type": "sql",
                      "code": "Select selection_param_value as sql_query from TDM.tasks;",
                      "sessionProvider": "fabric",
                      "one": true,
                      "collapsed": true,
                      "children": [
                        {
                          "name": "param_name",
                          "type": "string",
                          "code": "sql"
                        },
                        {
                          "name": "param_value",
                          "type": "variable",
                          "code": "sql_query"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Task Execution Summary",
          "type": "sql",
          "code": "select lu_id, lu_name, process_id, process_name from TDM.task_execution_list",
          "collapsed": true,
          "children": [
            {
              "type": "condition",
              "code": "lu_id > 0",
              "children": [
                {
                  "name": "LUs",
                  "children": [
                    {
                      "name": "LU Load Summary",
                      "type": "sql",
                      "code": "Select LU_NAME,\n  FABRIC_EXECUTION_ID,\n  PARENT_LU_NAME,\n  DATA_CENTER_NAME,\n  START_EXECUTION_TIME,\n  END_EXECUTION_TIME,\n  NUM_OF_PROCESSED_ENTITIES,\n  NUM_OF_COPIED_ENTITIES,\n  NUM_OF_FAILED_ENTITIES,\n  NUM_OF_PROCESSED_REF_TABLES,\n  NUM_OF_COPIED_REF_TABLES,\n  NUM_OF_FAILED_REF_TABLES\nFrom TDM.TASK_EXECUTION_LIST\nWhere lu_id = ${lu_id}"
                    }
                  ]
                },
                {
                  "name": "Post Execution Processes",
                  "children": [
                    {
                      "name": "Post Execution Processes Summary",
                      "type": "sql",
                      "code": "Select PROCESS_NAME,\n  FABRIC_EXECUTION_ID,\n  DATA_CENTER_NAME,\n  EXECUTION_STATUS,\n  START_EXECUTION_TIME,\n  END_EXECUTION_TIME\n From TDM.TASK_EXECUTION_LIST\n Where process_id = ${process_id}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "List of Root Entities",
          "collapsed": true,
          "children": [
            {
              "name": "Number of Copied Entities",
              "type": "sql",
              "code": "select count(*) as number_of_copied_root_entities from (Select distinct be_root_entity_id, TARGET_ROOT_ENTITY_ID from TDM.TASK_EXECUTION_LINK_ENTITIES where root_entity_status = 'completed' \nEXCEPT Select be_root_entity_id, TARGET_ROOT_ENTITY_ID from TDM.TASK_EXECUTION_LINK_ENTITIES where root_entity_status <> 'completed')"
            },
            {
              "name": "List of Copied Entities",
              "type": "sql",
              "code": "Select Distinct ENTITY_ID as source_id, TARGET_ENTITY_ID as target_id\nFrom TDM.TASK_EXECUTION_LINK_ENTITIES\nWhere PARENT_ENTITY_ID = '' And EXECUTION_STATUS = 'completed'\nEXCEPT Select ENTITY_ID as source_id, TARGET_ENTITY_ID as target_id \nFrom TDM.TASK_EXECUTION_LINK_ENTITIES\nWhere PARENT_ENTITY_ID = '' And EXECUTION_STATUS <> 'completed'\nlimit ${i_numOfRecsLimit}"
            },
            {
              "name": "Number of Failed Entities",
              "type": "sql",
              "code": "Select count(Distinct ENTITY_ID) as number_of_failed_root_entities\nFrom TDM.TASK_EXECUTION_LINK_ENTITIES\nWhere PARENT_ENTITY_ID = '' and execution_status <> 'completed'"
            },
            {
              "name": "List of Failed Entities",
              "type": "sql",
              "code": "Select Distinct ENTITY_ID as source_id, TARGET_ENTITY_ID as target_id\nFrom TDM.TASK_EXECUTION_LINK_ENTITIES\nWhere PARENT_ENTITY_ID = '' And EXECUTION_STATUS <> 'completed'\nlimit ${i_numOfRecsLimit}"
            }
          ]
        },
        {
          "name": "List of Reference Tables",
          "collapsed": true,
          "children": [
            {
              "name": "Number of Copied Reference Tables",
              "type": "sql",
              "code": "Select Count(1) as count\nFrom task_ref_exe_stats\nWhere execution_status = 'completed'"
            },
            {
              "name": "List of Copied Reference Tables",
              "type": "sql",
              "code": "select ref_table_name , number_of_records_to_process as number_of_records , number_of_processed_records, start_time as start_execution_time ,end_time as end_execution_time\nFrom task_ref_exe_stats\nWhere execution_status = 'completed'"
            },
            {
              "name": "Number of Failed Reference Tables",
              "type": "sql",
              "code": "Select Count(1) as count\nFrom task_ref_exe_stats where execution_status <> 'completed'"
            },
            {
              "name": "List of Failed Reference Tables",
              "type": "sql",
              "code": "select ref_table_name , number_of_records_to_process as number_of_records ,number_of_processed_records, start_time as start_execution_time ,end_time as end_execution_time, error_msg\nFrom task_ref_exe_stats\nWhere execution_status <> 'completed'"
            }
          ]
        },
        {
          "name": "Error Summary",
          "type": "sql",
          "code": "Select lu_name, flow_name, stage_name, actor_name, error_category, error_code, error_message, count(distinct nullif(target_entity_id, ' ')) as number_of_entities, count(*) as number_of_records\nFrom task_exe_error_detailed \ngroup by lu_name, flow_name, actor_name, stage_name, error_category, error_code, error_message\norder by error_category, lu_name, entity_id"
        },
        {
          "name": "Error Details",
          "type": "sql",
          "code": "Select distinct lu_name, entity_id as source_entity_id, target_entity_id, flow_name, stage_name, actor_name, error_category, error_code, error_message,actor_parameters \nFrom task_exe_error_detailed \norder by error_category, lu_name, entity_id\nlimit ${i_numOfRecsLimit}"
        },
        {
          "name": "Statistics Report",
          "type": "sql",
          "code": "select lu_name, table_name, target_count, source_count, diff, results \nfrom task_exe_stats_summary"
        },
        {
          "name": "Replace Sequence Summary Report",
          "type": "sql",
          "code": "select s.lu_type as lu_name, s.entity_target_id as target_entity_id, e.target_root_entity_id as root_target_entity_id, e.target_parent_id as parent_target_entity_id,\ne.parent_lu_name as parent_lu_name, s.table_name as table_name, s.column_name as column_name, s.source_id as source_id, s.target_id as target_id,s.is_instance_id as is_instance_id\nfrom tdm_seq_mapping s, task_execution_link_entities e, tasks t\nwhere (t.selection_method = 'S' or lower(t.replace_sequences) = 'true')\n and s.lu_type = e.lu_name and s.entity_target_id = e.target_entity_id\norder by lu_type, is_instance_id desc , entity_target_id , table_name , column_name\nlimit ${i_numOfRecsLimit}"
        }
      ]
    },
    {
      "name": "errorCode",
      "type": "string",
      "code": "SUCCESS"
    },
    {
      "name": "message",
      "type": "string",
      "code": ""
    }
  ],
  "params": [
    {
      "name": "i_taskExecutionId",
      "dataType": "String",
      "description": "",
      "mandatory": false
    }
  ],
  "exposeAsEndpoint": true,
  "path": "",
  "requireAuth": true,
  "additionalPermissions": []
}