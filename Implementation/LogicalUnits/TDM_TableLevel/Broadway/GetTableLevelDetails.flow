stages:
  Get Instance Fields:
    actors:
      Get Table Instance Fields:
        parent: InnerFlow
        in:
          flowName:
            const: GetTableInstanceFields
          ref_instance_id:
            external: ref_instance_id
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
  Get Details:
    actors:
      Get Table Details:
        parent: DbFetchFirstRow
        in:
          interface:
            const: TDM
          sql:
            const: |
              select rt.lu_name,rt.task_ref_table_id as ref_table_id, rt.ref_table_name, ${source_env} as source_env, t.task_type,t.selection_method,
                  rt.interface_name, rt.schema_name, es.task_execution_id, rt.task_id, rt.filter_type, COALESCE(rt.table_filter, '') as table_filter,
                  COALESCE(rt.filter_parameters, '') as filter_parameters, t.retention_period_type, t.retention_period_value,
                  rt.interface_name as target_interface,
                  rt.schema_name as target_schema,
                  coalesce(rt.target_table_prefix,'')|| rt.ref_table_name || coalesce(rt.target_table_suffix,'') as target_table_name,
                  coalesce(es.number_of_records_to_process, -1) as number_of_records_to_process
              from @TDMDB_SCHEMA@.task_ref_tables rt, @TDMDB_SCHEMA@.task_ref_exe_stats es, @TDMDB_SCHEMA@.tasks t
              where es.task_execution_id = ${task_execution_id}
              and es.task_id = rt.task_id
              and es.task_ref_table_id = rt.task_ref_table_id
              and rt.ref_table_name = ${ref_table_name}
              and rt.interface_name = ${interface_name}
              and rt.schema_name = ${schema_name}
              and rt.task_id = t.task_id
          source_env:
            link: Get Table Instance Fields/result/source_env
            schema: string
            mandatory: false
          task_execution_id:
            link: Get Table Instance Fields/result/task_execution_id
            schema: integer
            mandatory: false
          ref_table_name:
            link: Get Table Instance Fields/result/table_name
            schema: string
            mandatory: false
          interface_name:
            link: Get Table Instance Fields/result/interface_name
            schema: string
            mandatory: false
          schema_name:
            link: Get Table Instance Fields/result/schema_name
            schema: string
            mandatory: false
        out:
          result:
            schema: '#ref'
  Get Target Details:
    actors:
      GetTargetDetailsBySource1:
        parent: InnerFlow
        in:
          flowName:
            const: GetTargetDetailsBySource
          luName:
            link: Get Table Details/result/lu_name
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
          interfaceName:
            link: Get Table Details/result/interface_name
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
          schemaName:
            link: Get Table Details/result/schema_name
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
          tableName:
            link: Get Table Details/result/ref_table_name
            schema: string
            mandatory: false
        out:
          targetInterface:
            schema: string
          targetSchema:
            schema: string
          targetTableName:
            schema: string
  Create Target Table Details:
    actors:
      Create Map for Target Interface:
        parent: MapBuild
        in:
          key:
            const: target_interface
            schema: string
          value:
            link: GetTargetDetailsBySource1/targetInterface
            schema: string
        out:
          map:
            schema: '#ref'
      Create Map for Target Table Name:
        parent: MapBuild
        in:
          key:
            const: target_table_name
            schema: string
          value:
            link: GetTargetDetailsBySource1/targetTableName
            schema: string
        out:
          map:
            schema: '#ref'
  Get Retention:
    actors:
      Calculate Retention:
        parent: LuFunction
        in:
          functionName:
            const: getRetention
          retentionPeriodType:
            link: Get Table Details/result/retention_period_type
            schema: string
            mandatory: false
          retentionPeriodValue:
            link: Get Table Details/result/retention_period_value
            schema: integer
            mandatory: false
        out:
          result:
            schema: integer
      Set TARGET_ENTITY_ID:
        parent: FabricSet
        in:
          key:
            const: TARGET_ENTITY_ID
            default: false
          value:
            link: Get Table Details/result/target_table_name
      Check if There is a Schema:
        parent: MTableLookup
        in:
          mtable:
            const: TableLevelInterfaces
          interface_name:
            link: Get Table Details/result/interface_name
            schema: string
            editor:
              id: com.k2view.mTableKey
            mandatory: false
        out:
          result:
            schema: '#ref'
          no_schema:
            schema: string
  Check Schema:
    dependsOn: Get Retention
    actors:
      There is No Schema?:
        parent: Equals
        condition: result
        in:
          a:
            link: Check if There is a Schema/no_schema
            schema: string
          b:
            const: 'true'
            schema: string
      Create Map for Source Schema:
        parent: MapBuild
        in:
          key:
            const: schema_name
            schema: string
          value:
            const: ''
            schema: string
        out:
          map:
            schema: '#ref'
      Create Map for Target Schema with Empty Value:
        parent: MapBuild
        in:
          key:
            const: target_schema
            schema: string
          value:
            const: ''
            schema: string
        out:
          map:
            schema: '#ref'
    split: '--------------------'
  Stage 4:
    else: true
    dependsOn: Get Retention
    actors:
      Create Map for Target Scherna:
        parent: MapBuild
        in:
          key:
            const: target_schema
            schema: string
          value:
            link: GetTargetDetailsBySource1/targetSchema
            schema: string
        out:
          map:
            schema: '#ref'
  Create Retention Map:
    actors:
      Create Map for Retention:
        parent: MapBuild
        in:
          key:
            const: retention
            schema: string
          value:
            link: Calculate Retention/result
            schema: integer
        out:
          map:
            schema: '#ref'
  Merge:
    actors:
      Marge Retention to Output:
        parent: MapMerge
        in:
          maps:
            link:
            - path: Get Table Details/result
              pos: 0
            - path: Create Map for Retention/map
              pos: 1
            - path: Create Map for Target Table Name/map
              pos: 2
            - path: Create Map for Target Interface/map
              pos: 3
            - path: Create Map for Source Schema/map
              pos: 4
            - path: Create Map for Target Schema with Empty Value/map
              pos: 5
            - path: Create Map for Target Scherna/map
              pos: 5
        out:
          map:
            external: result
            schema: '#ref'
schemas:
  Get Table Instance Fields.out.result:
    type: object
    properties:
      source_env:
        type: string
      interface_name:
        type: string
      schema_name:
        type: string
      table_name:
        type: string
      task_execution_id:
        type: string
  Get Table Details.out.result:
    type: object
    properties:
      lu_name:
        type: string
      ref_table_id:
        type: integer
      ref_table_name:
        type: string
      source_env:
        type: string
      task_type:
        type: string
      selection_method:
        type: string
      interface_name:
        type: string
      schema_name:
        type: string
      task_execution_id:
        type: integer
      task_id:
        type: integer
      filter_type: {
        }
      table_filter:
        type: string
      filter_parameters:
        type: string
      retention_period_type:
        type: string
      retention_period_value:
        type: integer
      target_interface:
        type: string
      target_schema:
        type: string
      target_table_name:
        type: string
      number_of_records_to_process:
        type: integer
  Create Map for Target Interface.out.map:
    type: object
    properties:
      retention:
        type: integer
  Create Map for Target Table Name.out.map:
    type: object
    properties:
      retention:
        type: integer
  Check if There is a Schema.out.result:
    type: array
    items:
      type: object
      properties:
        interface_name:
          type: string
        suppress_indicator:
          type: string
        truncate_ind:
          type: string
        order_flow: {
          }
        no_schema:
          type: string
  Create Map for Source Schema.out.map:
    type: object
    properties:
      retention:
        type: integer
  Create Map for Target Schema with Empty Value.out.map:
    type: object
    properties:
      retention:
        type: integer
  Create Map for Target Scherna.out.map:
    type: object
    properties:
      retention:
        type: integer
  Create Map for Retention.out.map:
    type: object
    properties:
      retention:
        type: integer
  Marge Retention to Output.out.map:
    type: object
    properties:
      ref_table_id:
        type: integer
      ref_table_name:
        type: string
      source_env:
        type: string
      task_type:
        type: string
      interface_name:
        type: string
      schema_name:
        type: string
      task_execution_id:
        type: integer
      task_id:
        type: integer
      filter_type:
        type: string
      table_filter:
        type: string
      filter_parameters:
        type: string
      retention_period_type:
        type: string
      retention_period_value:
        type: integer
      target_interface:
        type: string
      target_schema:
        type: string
      target_table_name:
        type: string
      number_of_records_to_process:
        type: integer
      retention:
        type: integer
