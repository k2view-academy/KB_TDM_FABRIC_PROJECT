tags: TDM
stages:
  Prepare the Data:
    actors:
      Get Timing of Processing Start:
        parent: FabricSetRead
        in:
          key:
            const: IID_START_DATETIME
            default: false
      Now:
        parent: Now
  Calculate Fabric Get Duration and Total Duration:
    actors:
      Get Source Entity ID:
        parent: FabricSetRead
        in:
          key:
            const: SOURCE_ENTITY_ID
            default: false
      Get Target Entity ID:
        parent: FabricSetRead
        height: 123
        in:
          key:
            const: TARGET_ENTITY_ID
            default: false
      Get Entity Status:
        parent: FabricSetRead
        in:
          key:
            const: ENTITY_STATUS
            default: false
      Format the Current Time:
        parent: DateFormat
        in:
          format:
            const: yyyy-MMM-dd HH:mm:ss.SSS
          date:
            link: Now/date
      Calculate Total Processing Duration:
        parent: DateDuration
        in:
          from:
            link: Get Timing of Processing Start/result
          to:
            link: Now/date
  Load Data to Entities table:
    actors:
      Add Entity to Entities Table:
        parent: DbCommand
        in:
          interface:
            const: TDM
          sql:
            const: |-
              INSERT INTO ${@schema}.TASK_EXECUTION_ENTITIES(TASK_EXECUTION_ID, LU_NAME, ENTITY_ID, TARGET_ENTITY_ID, ENV_ID, EXECUTION_STATUS, ID_TYPE,
              FABRIC_EXECUTION_ID, IID, SOURCE_ENV, CREATION_DATE, ENTITY_START_TIME, ENTITY_END_TIME, VERSION_TASK_EXECUTION_ID,SUBSET_TASK_EXECUTION_ID, FABRIC_GET_TIME,
              TOTAL_PROCESSING_TIME, CLONE_NO, ROOT_ENTITY_ID, ROOT_LU_NAME)
              (SELECT  ${taskExecutionId}, ${luName}, ${sourceEntityId}, ${targetEntityId}, L.ENVIRONMENT_ID, ${executionStatus}, ${idType},
              COALESCE(FABRIC_EXECUTION_ID, '') AS FABRIC_EXECUTION_ID ,${iid},
              CASE WHEN T.LOAD_ENTITY = FALSE AND T.DELETE_BEFORE_LOAD = TRUE THEN E.ENVIRONMENT_NAME ELSE L.SOURCE_ENV_NAME END,
              Now(), ${entityStartTime}, ${entityEndTime}, ${version_task_execution_id},${subset_task_execution_id}, ${fabticTime},
              ${totalTime}, ${cloneNo}, ${rootEntityId}, ${rootLUName}
              FROM ${@schema}.TASK_EXECUTION_LIST L, ${@schema}.TASKS T, ${@schema}.ENViRONMENTS E
              WHERE TASK_EXECUTION_ID = ${taskExecutionId} AND L.TASK_ID = T.TASK_ID AND T.ENViRONMENT_ID = E.ENViRONMENT_ID LIMIT 1)
              ON CONFLICT ON CONSTRAINT task_execution_entities_pkey Do update set execution_status = ${executionStatus}
          luName:
            external: luName
            schema: string
          sourceEntityId:
            link: Get Source Entity ID/result
            schema: string
          targetEntityId:
            link: Get Target Entity ID/result
            schema: string
          executionStatus:
            link: Get Entity Status/result
            schema: string
          iid:
            link: Get Target Entity ID/result
            schema: string
          entityStartTime:
            link: Get Timing of Processing Start/result
            schema: string
          entityEndTime:
            link: Format the Current Time/string
            schema: string
          fabticTime:
            schema: number
          totalTime:
            link: Calculate Total Processing Duration/millis
            schema: number
          idType:
            const: REFERENCE
            schema: string
          cloneNo:
            const: '0'
            schema: string
          schema:
            const: '@TDMDB_SCHEMA@'
            schema: string
            mandatory: false
          rootEntityId:
            link: Get Target Entity ID/result
            schema: string
            mandatory: false
          rootLUName:
            const: TDM_TableLevel
            schema: string
            mandatory: false
          version_task_execution_id:
            const: '0'
            schema: string
            mandatory: false
          subset_task_execution_id:
            const: '0'
            schema: string
            mandatory: false
          taskExecutionId:
            external: taskExecutionId
            schema: string
            mandatory: false
  Stage 1: {
    }
