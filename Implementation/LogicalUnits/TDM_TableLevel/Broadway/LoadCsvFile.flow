tags: LoadFlows
stages:
  Inputs:
    transactional: false
    actors:
      Target Interface:
        parent: Const
        remark: The target interface
        in:
          value:
            const: null
            external: targetInterface
            schema: string
        out:
          value:
            schema: string
      Target Schema:
        parent: Const
        remark: The target Schema
        in:
          value:
            const: null
            external: targetSchema
            schema: string
        out:
          value:
            schema: string
      Target Table Name:
        parent: Const
        remark: The name of the target table.
        in:
          value:
            const: null
            external: targetTable
            schema: string
        out:
          value:
            schema: string
      'Table''s fields Names ':
        parent: Const
        in:
          value:
            const: null
            external: fieldsArray
            schema: '#ref'
        out:
          value:
            schema: '#ref'
      Input Records:
        parent: Const
        in:
          value:
            const: null
            external: inputRecords
            schema: '#ref'
        out:
          value:
            schema: '#ref'
      Get Commit Size:
        parent: FabricSetRead
        in:
          key:
            const: TDM_REF_UPD_SIZE
            default: false
        out:
          result:
            schema: integer
      StringFormat1:
        parent: StringFormat
        in:
          format:
            const: ${targetTable}.csv
          targetTable:
            external: targetTable
            schema: string
            mandatory: false
  Load Data To Target:
    transactional: true
    actors:
      Load Table:
        parent: DbLoad
        disabled: true
        in:
          interface:
            const: null
            external: targetInterface
          schema:
            const: null
            external: targetSchema
          table:
            const: null
            external: targetTable
          fields:
            const: null
            link: Table's fields Names /value
          keys:
            const: null
          batch:
            const: true
          params:
            link:
              path: Input Records/value
              iterate: Iterate
      Count Records:
        parent: JavaScript
        in:
          script:
            const: |-
              var i = flowGlobals.recCount;
              var result = false;
              if (i == null) {
                  i = 0;
              }
              flowGlobals.recCount = ++i;
              if (i%commitSize === 0) {
                  result = true;
              }
              result;
          commitSize:
            link: Get Commit Size/result
            schema: boolean
            mandatory: false
        out:
          result:
            schema: integer
      CsvBuilder1:
        parent: CsvBuilder
        in:
          columns:
            const: null
            link: Table's fields Names /value
          maps:
            link:
              path: Input Records/value
              iterate: Iterate
  Stage 2:
    transactional: true
    actors:
      FileWrite1:
        parent: FileWrite
        in:
          interface:
            const: localfilesystem
          path:
            link: StringFormat1/string
          stream:
            link: CsvBuilder1/csv
  Stage 1:
    last: 1
    transactional: false
    actors:
      Equals1:
        parent: Equals
        condition: result
        in:
          a:
            link: Count Records/result
            schema: boolean
          b:
            const: true
            schema: boolean
  Return Current Count:
    transactional: false
    actors:
      Count:
        parent: JavaScript
        in:
          script:
            const: flowGlobals.recCount;
        out:
          result:
            external: result
            schema: integer
schemas:
  Table's fields Names .in.value:
    type: array
    items:
      type: string
  Table's fields Names .out.value:
    type: array
    items:
      type: string
  Input Records.in.value:
    type: array
    items: {
      }
  Input Records.out.value:
    type: array
    items:
      type: object
      properties:
        contract_ref_id:
          type: integer
        offer_ref_id:
          type: integer
        offer_contract_description:
          type: string
