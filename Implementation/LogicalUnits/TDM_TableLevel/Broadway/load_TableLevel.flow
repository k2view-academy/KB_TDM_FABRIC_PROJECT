{
    "tags": [
        "LoadFlows"
    ],
    "levels": [
        {
            "stages": [
                {
                    "name": "Description",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "remark": "This flow loads table from Sqlite DB to Target DB",
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Fields",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Get Table Details",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "GetTableLevelDetails"
                                    },
                                    {
                                        "name": "ref_instance_id",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "ref_table_id": {
                                                    "type": "integer"
                                                },
                                                "ref_table_name": {
                                                    "type": "string"
                                                },
                                                "source_env": {
                                                    "type": "string"
                                                },
                                                "task_type": {
                                                    "type": "string"
                                                },
                                                "interface_name": {
                                                    "type": "string"
                                                },
                                                "schema_name": {
                                                    "type": "string"
                                                },
                                                "task_execution_id": {
                                                    "type": "integer"
                                                },
                                                "task_id": {
                                                    "type": "integer"
                                                },
                                                "filter_type": {
                                                    "type": "string"
                                                },
                                                "table_filter": {
                                                    "type": "string"
                                                },
                                                "filter_parameters": {
                                                    "type": "string"
                                                },
                                                "retention_period_type": {
                                                    "type": "string"
                                                },
                                                "retention_period_value": {
                                                    "type": "integer"
                                                },
                                                "target_interface": {
                                                    "type": "string"
                                                },
                                                "target_schema": {
                                                    "type": "string"
                                                },
                                                "target_table_name": {
                                                    "type": "string"
                                                },
                                                "number_of_records_to_process": {
                                                    "type": "integer"
                                                },
                                                "retention": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Felds with Types",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Get Table's Fields with Sqlite Types",
                            "actorType": {
                                "parentType": "LuFunction",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "const": "getDbTablesColsAsSqlite"
                                    },
                                    {
                                        "name": "dbInterfaceName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "catalogSchema",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "table",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "columns",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "column_name": {
                                                        "type": "string"
                                                    },
                                                    "column_type": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Array Of Fields",
                    "dependsOnList": [],
                    "isLast": 1,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Build Array of Fields",
                            "actorType": {
                                "parentType": "ArrayBuilder",
                                "inputs": [],
                                "outputs": [
                                    {
                                        "name": "array",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 6",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "StringFormat2",
                            "actorType": {
                                "parentType": "StringFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "/*sqlite*/ select * from TDM_TableLevel.__t_${tableName}"
                                    },
                                    {
                                        "name": "tableName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "StringFormat1",
                            "actorType": {
                                "parentType": "StringFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "/*sqlite*/ select count(*) from TDM_TableLevel.__t_${tableName}"
                                    },
                                    {
                                        "name": "tableName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "FabricSetRead1",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "filterUsed",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 5",
                    "dependsOnList": [
                        "Stage 6"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "JavaScript1",
                            "condition": "result",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "var result = false;\r\nif(tableFiler == \"\" || filerUsed) {\r\n    result = true;\r\n}\r\nresult;",
                                            "script": "var result = false;\n\nif (tableFiler == \"\" || filerUsed) {\n  result = true;\n}\n\nresult;"
                                        }
                                    },
                                    {
                                        "name": "tableFiler",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "filerUsed",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Const1",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Const2",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Stage 7",
                    "dependsOnList": [
                        "Stage 6"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "Add  Wherer Clause to Count1",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "BuildTableFilter"
                                    },
                                    {
                                        "name": "selectClause",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableFilter",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "filterParameters",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "selectStatement",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "paramters",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Add  Wherer Clause to Count11",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "BuildTableFilter"
                                    },
                                    {
                                        "name": "selectClause",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableFilter",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "filterParameters",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "selectStatement",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "paramters",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update Total Records",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Init record count",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.count = 0;"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Get Commit Size",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "TDM_REF_UPD_SIZE",
                                        "isDefault": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Fabric Table Data",
                    "dependsOnList": [
                        "Update Total Records"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Not Retained In Fabric?",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": 0
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get Data From Source",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "GetSourceData"
                                    },
                                    {
                                        "name": "tableFilter",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "sourceInterface",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "editor": {
                                            "id": "com.k2view.interface",
                                            "interfaceType": [
                                                "database",
                                                "CassandraLoader"
                                            ],
                                            "interfaces": [
                                                "fabric"
                                            ]
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "taskExeId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "sourceSchema",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "editor": {
                                            "id": "com.k2view.mTableKey"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "editor": {
                                            "id": "com.k2view.mTableKey"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "retention",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "filterParameters",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "contract_ref_id": {
                                                        "type": "integer"
                                                    },
                                                    "offer_ref_id": {
                                                        "type": "integer"
                                                    },
                                                    "offer_contract_description": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "SqliteInsertStatement",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Retained in Fabric",
                    "dependsOnList": [
                        "Update Total Records"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "Get Data From Fabric",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "case_id": {
                                                        "type": "integer"
                                                    },
                                                    "note_id": {
                                                        "type": "integer"
                                                    },
                                                    "note_date": {
                                                        "type": "string"
                                                    },
                                                    "note_text": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Set Target Environment1",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "setTargetEnv"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Update Total Number of Records",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "UpdateTotalNumberOfRecords"
                                    },
                                    {
                                        "name": "taskExeId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "totalNumberOfRecords",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "countSql",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "editor": {
                                            "id": "com.k2view.code",
                                            "language": "sql",
                                            "template": true
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "params",
                                        "schema": {},
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Group Records to Commit Size",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Group of Records",
                            "actorType": {
                                "parentType": "ArrayGrouper",
                                "inputs": [
                                    {
                                        "name": "size",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "case_id": {
                                                            "type": "integer"
                                                        },
                                                        "note_id": {
                                                            "type": "integer"
                                                        },
                                                        "note_date": {
                                                            "type": "string"
                                                        },
                                                        "note_text": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Each Record",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": false,
                    "actors": [
                        {
                            "name": "Table Record",
                            "actorType": {
                                "parentType": "ConstStrings",
                                "inputs": [
                                    {
                                        "name": "strings",
                                        "const": null
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Values",
                    "dependsOnList": [],
                    "isLast": 0,
                    "isTransactional": true,
                    "actors": []
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Load Data To Target",
                    "dependsOnList": [],
                    "isLast": 1,
                    "isTransactional": true,
                    "actors": [
                        {
                            "name": "Error Handler",
                            "onError": "result",
                            "actorType": {
                                "parentType": "ErrorHandler",
                                "inputs": [
                                    {
                                        "name": "config",
                                        "const": [
                                            {
                                                "exceptionKey": "java.lang.Exception",
                                                "conditions": {
                                                    "message": ""
                                                },
                                                "actions": {
                                                    "suppress": false,
                                                    "log": true,
                                                    "flowName": "PopulateTableErrorsForTableLevel"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Load TableTable",
                            "actorType": {
                                "parentType": "DbLoad",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": null
                                    },
                                    {
                                        "name": "schema",
                                        "const": null
                                    },
                                    {
                                        "name": "table",
                                        "const": null
                                    },
                                    {
                                        "name": "fields",
                                        "const": null
                                    },
                                    {
                                        "name": "keys",
                                        "const": null
                                    },
                                    {
                                        "name": "batch",
                                        "const": true
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Update Counter",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": {
                                            "userCode": "flowArgs.count++;\r\n",
                                            "script": "flowArgs.count++;"
                                        }
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update With Current Record Count",
                    "dependsOnList": [],
                    "isLast": 1,
                    "actors": [
                        {
                            "name": "Update Table's Processed Count",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "update @TDMDB_SCHEMA@.task_ref_exe_stats\r\nset number_of_processed_records = ${recCount}\r\nwhere task_execution_id = ${taskExeId} \r\nand task_ref_table_id = ${tableId}"
                                    },
                                    {
                                        "name": "taskExeId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "recCount",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Number of Loaded Records",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Get Last Count",
                            "actorType": {
                                "parentType": "JavaScript",
                                "inputs": [
                                    {
                                        "name": "script",
                                        "const": "flowArgs.count"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update Processed Count",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Update Table's Final Processed Count",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "TDM"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "update @TDMDB_SCHEMA@.task_ref_exe_stats\r\nset number_of_processed_records = ${recCount}\r\nwhere task_execution_id = ${taskExeId} \r\nand task_ref_table_id = ${tableId}"
                                    },
                                    {
                                        "name": "taskExeId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tableId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "recCount",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Table's Fields with Sqlite Types",
                "name": "dbInterfaceName"
            },
            "path": [
                "target_interface"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Table's Fields with Sqlite Types",
                "name": "catalogSchema"
            },
            "path": [
                "target_schema"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Table's Fields with Sqlite Types",
                "name": "table"
            },
            "path": [
                "target_table_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Load TableTable",
                "name": "schema"
            },
            "path": [
                "target_schema"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Load TableTable",
                "name": "table"
            },
            "path": [
                "target_table_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Table's Processed Count",
                "name": "tableId"
            },
            "path": [
                "ref_table_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Table's Processed Count",
                "name": "taskExeId"
            },
            "path": [
                "task_execution_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Table's Final Processed Count",
                "name": "tableId"
            },
            "path": [
                "ref_table_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Table's Final Processed Count",
                "name": "taskExeId"
            },
            "path": [
                "task_execution_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Not Retained In Fabric?",
                "name": "a"
            },
            "path": [
                "retention"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "sourceInterface"
            },
            "path": [
                "interface_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "taskExeId"
            },
            "path": [
                "task_execution_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "tableId"
            },
            "path": [
                "ref_table_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "sourceSchema"
            },
            "path": [
                "schema_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "tableName"
            },
            "path": [
                "ref_table_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "retention"
            },
            "path": [
                "retention"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Load TableTable",
                "name": "interface"
            },
            "path": [
                "target_interface"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "tableFilter"
            },
            "path": [
                "table_filter"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Data From Source",
                "name": "filterParameters"
            },
            "path": [
                "filter_parameters"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "StringFormat1",
                "name": "tableName"
            },
            "path": [
                "ref_table_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "StringFormat2",
                "name": "tableName"
            },
            "path": [
                "ref_table_name"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Add  Wherer Clause to Count1",
                "name": "filterParameters"
            },
            "path": [
                "filter_parameters"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "JavaScript1",
                "name": "tableFiler"
            },
            "path": [
                "table_filter"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Add  Wherer Clause to Count1",
                "name": "tableFilter"
            },
            "path": [
                "table_filter"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Total Number of Records",
                "name": "tableId"
            },
            "path": [
                "ref_table_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Total Number of Records",
                "name": "taskExeId"
            },
            "path": [
                "task_execution_id"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Add  Wherer Clause to Count11",
                "name": "tableFilter"
            },
            "path": [
                "table_filter"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Add  Wherer Clause to Count11",
                "name": "filterParameters"
            },
            "path": [
                "filter_parameters"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table Details",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Total Number of Records",
                "name": "totalNumberOfRecords"
            },
            "path": [
                "number_of_records_to_process"
            ]
        },
        {
            "leftPort": {
                "actor": "Get Table's Fields with Sqlite Types",
                "name": "columns"
            },
            "rightPort": {
                "actor": "Build Array of Fields",
                "name": "input"
            },
            "iterate": "Iterate",
            "path": [
                "column_name"
            ],
            "arrayPosition": 0
        },
        {
            "leftPort": {
                "actor": "Build Array of Fields",
                "name": "array"
            },
            "rightPort": {
                "actor": "Load TableTable",
                "name": "fields"
            }
        },
        {
            "leftPort": {
                "actor": "StringFormat2",
                "name": "string"
            },
            "rightPort": {
                "actor": "Add  Wherer Clause to Count1",
                "name": "selectClause"
            }
        },
        {
            "leftPort": {
                "actor": "StringFormat2",
                "name": "string"
            },
            "rightPort": {
                "actor": "Const1",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "StringFormat1",
                "name": "string"
            },
            "rightPort": {
                "actor": "Const2",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "StringFormat1",
                "name": "string"
            },
            "rightPort": {
                "actor": "Add  Wherer Clause to Count11",
                "name": "selectClause"
            }
        },
        {
            "leftPort": {
                "actor": "FabricSetRead1",
                "name": "result"
            },
            "rightPort": {
                "actor": "JavaScript1",
                "name": "filerUsed"
            }
        },
        {
            "leftPort": {
                "actor": "Const1",
                "name": "value"
            },
            "rightPort": {
                "actor": "Get Data From Fabric",
                "name": "sql"
            }
        },
        {
            "leftPort": {
                "actor": "Const2",
                "name": "value"
            },
            "rightPort": {
                "actor": "Update Total Number of Records",
                "name": "countSql"
            }
        },
        {
            "leftPort": {
                "actor": "Add  Wherer Clause to Count1",
                "name": "selectStatement"
            },
            "rightPort": {
                "actor": "Get Data From Fabric",
                "name": "sql"
            }
        },
        {
            "leftPort": {
                "actor": "Add  Wherer Clause to Count1",
                "name": "paramters"
            },
            "rightPort": {
                "actor": "Get Data From Fabric",
                "name": "params"
            }
        },
        {
            "leftPort": {
                "actor": "Add  Wherer Clause to Count11",
                "name": "selectStatement"
            },
            "rightPort": {
                "actor": "Update Total Number of Records",
                "name": "countSql"
            }
        },
        {
            "leftPort": {
                "actor": "Add  Wherer Clause to Count11",
                "name": "paramters"
            },
            "rightPort": {
                "actor": "Update Total Number of Records",
                "name": "params"
            }
        },
        {
            "leftPort": {
                "actor": "Get Commit Size",
                "name": "result"
            },
            "rightPort": {
                "actor": "Group of Records",
                "name": "size"
            }
        },
        {
            "leftPort": {
                "actor": "Get Data From Source",
                "name": "result"
            },
            "rightPort": {
                "actor": "Group of Records",
                "name": "input"
            }
        },
        {
            "leftPort": {
                "actor": "Get Data From Fabric",
                "name": "result"
            },
            "rightPort": {
                "actor": "Group of Records",
                "name": "input"
            }
        },
        {
            "leftPort": {
                "actor": "Group of Records",
                "name": "result"
            },
            "rightPort": {
                "actor": "Table Record",
                "name": "strings"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "Table Record",
                "name": "strings"
            },
            "rightPort": {
                "actor": "Load TableTable",
                "name": "params"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "Update Counter",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Table's Processed Count",
                "name": "recCount"
            }
        },
        {
            "leftPort": {
                "actor": "Get Last Count",
                "name": "result"
            },
            "rightPort": {
                "actor": "Update Table's Final Processed Count",
                "name": "recCount"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "refInstanceId"
            },
            "rightPort": {
                "actor": "Get Table Details",
                "name": "ref_instance_id"
            }
        }
    ]
}